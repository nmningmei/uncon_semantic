<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.85.4">
  <Settings>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="$[-1,-1,-1]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{u'opacity': u'0.1', u'n_square': u'64', u'lowest_opacity': u'0.02', u'probeFrames': u'4', u'participant': u'test', u'mask_dur': u'4', u'step_size': u'0.05', u'session': u'1', u'image_size': u'512'}" valType="code"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1280, 720]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Save csv file" updates="None" val="True" valType="bool"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="u'data/%s/%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="experiment" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="jitter1">
      <TextComponent name="jitter_delay">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="jitter_delay" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="stopVal" updates="constant" val="$jitter1_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <CodeComponent name="log_jitter_delay">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="log_jitter_delay" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="jitter1_dur = jitter1_dur_options[jitter_counter]&amp;#10;main_loop.addData('jitter1',jitter1_dur)" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="discriminate">
      <CodeComponent name="get_response">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="get_response" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="main_loop.addData(&quot;discrim_resptime&quot;, globalClock.getTime() - startTime)&amp;#10;resp_options = [['nV_V',['Nonliving_Things','Living_Things']],&amp;#10;                ['V_nV',['Living_Things','Nonliving_Things']]]&amp;#10;idx = np.random.choice([0,1])&amp;#10;resp_msg = '{}'.format(resp_options[idx][0])&amp;#10;main_loop.addData(&quot;response_window&quot;, resp_options[idx][0])" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="temp_correctAns = np.where(np.array(resp_options[idx][1]) == category)[0][0]+1&amp;#10;main_loop.addData('correctAns',temp_correctAns)&amp;#10;# objective accuracy&amp;#10;if (response.keys == str(temp_correctAns)) or (response.keys == temp_correctAns):&amp;#10;   temp_corr = 1&amp;#10;else:&amp;#10;    temp_corr = 0&amp;#10;main_loop.addData('response.corr' , temp_corr)" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="response_options">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="response_options" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="set every repeat" val="$resp_msg" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="response">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="response" valType="code"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'1','2'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fixation">
      <TextComponent name="fixation_cross">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="fixation_cross" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <TextComponent name="blank_period">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="blank_period" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="stopVal" updates="constant" val="$blank_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$fixation_cross.status == FINISHED" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <CodeComponent name="code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="main_loop.addData(&quot;fixation_onset&quot;, globalClock.getTime() - startTime)&amp;#10;main_loop.addData(&quot;blank_dur&quot;,blank_dur)" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="visibility">
      <CodeComponent name="trigger_visibility">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="trigger_visibility" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="main_loop.addData(&quot;visible_resptime&quot;, globalClock.getTime() - startTime)" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="count += 1&amp;#10;main_loop.addData('opacity',opacity)&amp;#10;&amp;#10;#if (visible.keys == str('1')) or (visible.keys == '1'):# invisible&amp;#10;#    opacity += np.random.choice([0.02, 0.04, 0.08],size = 1)[0]&amp;#10;#    if opacity &gt; 1: opacity = 1&amp;#10;#    #curr += np.random.choice([1,2,3],size=1)[0]&amp;#10;#    #if curr &lt; 1:  curr = 1&amp;#10;#elif (visible.keys == str('2')) or (visible.keys == '2'):# partially aware&amp;#10;#    opacity -= 0.1&amp;#10;#    if opacity &lt; lowest_opacity: opacity = lowest_opacity&amp;#10;#    #curr -= 1&amp;#10;#    #if curr &lt; 1:  curr = 1 &amp;#10;#elif (visible.keys == str('3')) or (visible.keys == '3'): # visible&amp;#10;#    opacity -= np.random.choice([0.02, 0.04, 0.08],size = 1)[0]&amp;#10;#    if opacity &lt; lowest_opacity: opacity = lowest_opacity&amp;#10;#    #curr -= np.random.choice([2,3],size=1,p=[0.5,0.5])[0]&amp;#10;#    #if curr &lt; 1: curr = 1&amp;#10;&amp;#10;if ((visible.keys == str('1')) or (visible.keys == '1')) and (temp_corr == 0): # invisible and incorrect&amp;#10;    opacity += 2 * step_size&amp;#10;    unconscious_trials.append(temp_corr)&amp;#10;    n_unconscious += 1&amp;#10;elif ((visible.keys == str('1')) or (visible.keys == '1')) and (temp_corr == 1): # invisible and correct&amp;#10;    opacity += step_size&amp;#10;    unconscious_trials.append(temp_corr)&amp;#10;    n_unconscious += 1&amp;#10;elif ((visible.keys == str('2')) or (visible.keys == '2')) and (temp_corr == 0): # visible and incorrect&amp;#10;    opacity -= step_size&amp;#10;    if opacity &lt; lowest_opacity: opacity = lowest_opacity&amp;#10;elif ((visible.keys == str('2')) or (visible.keys == '2')) and (temp_corr == 1): # visible and correct&amp;#10;    opacity -= 2 * step_size&amp;#10;    if opacity &lt; lowest_opacity: opacity = lowest_opacity" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="visibility_message">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="visibility_message" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="?" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="visible">
        <Param name="correctAns" updates="constant" val="'1'" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="visible" valType="code"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'1','2'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="premask">
      <GratingComponent name="premasking">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="tex" updates="set every repeat" val="$masks" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="premasking" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="$mask_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="texture resolution" updates="constant" val="256" valType="code"/>
        <Param name="phase" updates="constant" val="0.0" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (frames)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="sf" updates="constant" val="None" valType="code"/>
        <Param name="size" updates="constant" val="(image_size/1.75,image_size/1.75)" valType="code"/>
      </GratingComponent>
    </Routine>
    <Routine name="trial">
      <CodeComponent name="importing">
        <Param name="Begin Experiment" updates="constant" val="import sys&amp;#10;reload(sys)&amp;#10;sys.setdefaultencoding('latin-1')" valType="extendedCode"/>
        <Param name="name" updates="None" val="importing" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="main_loop.addData(&quot;image_onset_time&quot;,globalClock.getTime() - startTime)" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <ImageComponent name="presentation">
        <Param name="opacity" updates="set every repeat" val="$opacity" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="presentation" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="$curr" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="texture resolution" updates="constant" val="256" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (frames)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$PATH_english" valType="str"/>
        <Param name="size" updates="constant" val="(image_size,image_size)" valType="code"/>
      </ImageComponent>
    </Routine>
    <Routine name="intro">
      <CodeComponent name="settingThingsUp">
        <Param name="Begin Experiment" updates="constant" val="globalClock = core.Clock()&amp;#10;&amp;#10;mask_dur = int(expInfo['mask_dur'])&amp;#10;n_square = int(expInfo['n_square'])&amp;#10;image_size = int(expInfo['image_size'])&amp;#10;opacity = float(expInfo['opacity'])&amp;#10;session = int(expInfo['session'])&amp;#10;step_size = float(expInfo['step_size'])&amp;#10;&amp;#10;curr = int(expInfo['probeFrames'])&amp;#10;lowest_opacity = float(expInfo['lowest_opacity'])&amp;#10;count = 0&amp;#10;&amp;#10;import time&amp;#10;from psychopy import parallel&amp;#10;parallel.setPortAddress(888)&amp;#10;wait_msg = &quot;Wating for Scanner ...&quot;&amp;#10;msg = visual.TextStim(win,color = 'DarkGray',text = wait_msg)&amp;#10;&amp;#10;# jitter 1&amp;#10;jitter_counter = 0&amp;#10;jitter1_dur_options = np.concatenate([[1.5]*16,[2.0]*8,[2.5]*6,[3.0]*4,[3.5]*4])&amp;#10;np.random.shuffle(jitter1_dur_options)&amp;#10;&amp;#10;# jitter 2&amp;#10;jitter2_dur_options = np.concatenate([[6.0]*16,[6.5]*8,[7.0]*6,[7.5]*4,[8.0]*4])&amp;#10;np.random.shuffle(jitter2_dur_options)&amp;#10;&amp;#10;np.random.seed(12345)&amp;#10;masks = np.random.rand(n_square,n_square)*2 - 1&amp;#10;&amp;#10;# save corrections of trials of unconscious&amp;#10;unconscious_trials = []&amp;#10;# count unconscious trials&amp;#10;n_unconscious = 0" valType="extendedCode"/>
        <Param name="name" updates="None" val="settingThingsUp" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="msg.draw()&amp;#10;win.flip()&amp;#10;&amp;#10;while True:&amp;#10;    if (event.getKeys() == ['q']):#(parallel.readPin(10) == 1) or &amp;#10;        break&amp;#10;    else:&amp;#10;        time.sleep(0.0001) # give 1ms to other processes&amp;#10;globalClock.reset()&amp;#10;startTime = globalClock.getTime()" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_experiment">
      <CodeComponent name="theEnd">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="theEnd" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="print(globalClock.getTime() - startTime)&amp;#10;print('{}/{}, mean unconscious = {:.2f},opacity = {:.1f},p(correct) = {:.2f}'.format(&amp;#10;        main_loop.thisN+1,main_loop.nTotal,&amp;#10;        n_unconscious/(main_loop.thisN+1),opacity,meanacc))" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="intoPrepare">
      <TextComponent name="preparation">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="preparation" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <TextComponent name="first_blank">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="first_blank" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$preparation.status == FINISHED" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="jitter2">
      <CodeComponent name="code_2">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="jitter2_delay_dur = jitter2_dur_options[jitter_counter]&amp;#10;main_loop.addData('jitter2',jitter2_delay_dur)&amp;#10;jitter_counter += 1&amp;#10;&amp;#10;meanacc = main_loop.data['response.corr'].mean()&amp;#10;&amp;#10;&amp;#10;msg_post = '{}/{}, mean unconscious = {:.2f},opacity = {:.1f},p(correct) = {:.2f}'.format(&amp;#10;        main_loop.thisN+1,main_loop.nTotal,&amp;#10;        n_unconscious/(main_loop.thisN+1),opacity,meanacc)" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="print('{}/{}, mean unconscious = {:.2f},opacity = {:.1f},p(correct) = {:.2f}'.format(&amp;#10;        main_loop.thisN+1,main_loop.nTotal,&amp;#10;        n_unconscious/(main_loop.thisN+1),opacity,meanacc))" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="post_jitter">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="post_jitter" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="stopVal" updates="constant" val="$jitter2_delay_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="postmask">
      <GratingComponent name="postmasking">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="tex" updates="set every repeat" val="$masks" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="postmasking" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="mask_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="texture resolution" updates="constant" val="512" valType="code"/>
        <Param name="phase" updates="constant" val="0.0" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (frames)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="sf" updates="constant" val="None" valType="code"/>
        <Param name="size" updates="constant" val="(image_size/1.75,image_size/1.75)" valType="code"/>
      </GratingComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="intro"/>
    <Routine name="intoPrepare"/>
    <LoopInitiator loopType="TrialHandler" name="main_loop">
      <Param name="conditionsFile" updates="None" val="..\experiment_csvs\session_1.csv" valType="str"/>
      <Param name="name" updates="None" val="main_loop" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{'Category': u'object', 'Mean_Familiarity': 4.08, 'SD_Concreteness': 2.2546248764114467, 'Word': u'Arco', 'picked': True, 'Mean_Arousal': 4.052631578947368, 'Mean_Valence': 4.842105263157895, 'SD_Familiarity': 2.4650895859312425, 'Length': 4, 'Frequency': 22.86, 'PATH_spanish': u'../stimuli_figure/Arc_es.jpeg', 'blank_dur': 0.6949854698841671, 'English': u'Arc', 'log_frequency': 3.1293886583666644, 'PATH_english': u'../stimuli_figure/Arc_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.7076515946484954, 'SD_Valence': 1.3259635107586647, 'Mean_Concreteness': 6.2}, {'Category': u'object', 'Mean_Familiarity': 3.96, 'SD_Concreteness': 1.3344650993747542, 'Word': u'Faja', 'picked': True, 'Mean_Arousal': 3.842105263157895, 'Mean_Valence': 3.684210526315789, 'SD_Familiarity': 2.4913182588073064, 'Length': 4, 'Frequency': 2.32, 'PATH_spanish': u'../stimuli_figure/Belt_es.jpeg', 'blank_dur': 0.5472482527843919, 'English': u'Belt', 'log_frequency': 0.8415671856782185, 'PATH_english': u'../stimuli_figure/Belt_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.808782116612434, 'SD_Valence': 1.6620609667468578, 'Mean_Concreteness': 7.041666666666668}, {'Category': u'animal', 'Mean_Familiarity': 4.32, 'SD_Concreteness': 1.8, 'Word': u'\xc1guila', 'picked': True, 'Mean_Arousal': 6.0, 'Mean_Valence': 6.157894736842105, 'SD_Familiarity': 2.4447222064411878, 'Length': 6, 'Frequency': 7.86, 'PATH_spanish': u'../stimuli_figure/Eagle_es.jpeg', 'blank_dur': 0.6622124312981593, 'English': u'Eagle', 'log_frequency': 2.0617866064411148, 'PATH_english': u'../stimuli_figure/Eagle_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.6765472885698187, 'SD_Valence': 1.5513954623216122, 'Mean_Concreteness': 7.36}, {'Category': u'object', 'Mean_Familiarity': 3.9166666666666665, 'SD_Concreteness': 1.5275252316519468, 'Word': u'Soplete', 'picked': True, 'Mean_Arousal': 4.842105263157895, 'Mean_Valence': 3.763157894736842, 'SD_Familiarity': 2.7491764247666524, 'Length': 7, 'Frequency': 2.5, 'PATH_spanish': u'../stimuli_figure/Blowtorch_es.jpeg', 'blank_dur': 0.3443782377496841, 'English': u'Blowtorch', 'log_frequency': 0.9162907318741552, 'PATH_english': u'../stimuli_figure/Blowtorch_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 2.0205206151355566, 'SD_Valence': 1.618043705792556, 'Mean_Concreteness': 7.4}, {'Category': u'object', 'Mean_Familiarity': 4.76, 'SD_Concreteness': 1.0535653752852758, 'Word': u'Sombrilla', 'picked': True, 'Mean_Arousal': 3.763157894736842, 'Mean_Valence': 5.842105263157895, 'SD_Familiarity': 2.241279396535232, 'Length': 9, 'Frequency': 4.29, 'PATH_spanish': u'../stimuli_figure/Umbrella_es.jpeg', 'blank_dur': 0.3233334448475426, 'English': u'Umbrella', 'log_frequency': 1.4562867329399256, 'PATH_english': u'../stimuli_figure/Umbrella_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.951218753252463, 'SD_Valence': 1.405131825872454, 'Mean_Concreteness': 7.88}, {'Category': u'animal', 'Mean_Familiarity': 4.68, 'SD_Concreteness': 1.2909944487358056, 'Word': u'Perdiz', 'picked': True, 'Mean_Arousal': 3.947368421052632, 'Mean_Valence': 5.315789473684211, 'SD_Familiarity': 2.5119713374160946, 'Length': 6, 'Frequency': 1.07, 'PATH_spanish': u'../stimuli_figure/Partridge_es.jpeg', 'blank_dur': 0.3387734587545239, 'English': u'Partridge', 'log_frequency': 0.06765864847381486, 'PATH_english': u'../stimuli_figure/Partridge_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.9023082482626867, 'SD_Valence': 1.678243340888785, 'Mean_Concreteness': 8.0}, {'Category': u'object', 'Mean_Familiarity': 3.84, 'SD_Concreteness': 1.106044001535802, 'Word': u'Br\xfajula', 'picked': True, 'Mean_Arousal': 4.0, 'Mean_Valence': 5.105263157894737, 'SD_Familiarity': 2.230097157823697, 'Length': 7, 'Frequency': 2.5, 'PATH_spanish': u'../stimuli_figure/Compass_es.jpeg', 'blank_dur': 0.3299364783970917, 'English': u'Compass', 'log_frequency': 0.9162907318741552, 'PATH_english': u'../stimuli_figure/Compass_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.9312508199945781, 'SD_Valence': 1.5385053063037817, 'Mean_Concreteness': 7.84}, {'Category': u'animal', 'Mean_Familiarity': 4.36, 'SD_Concreteness': 1.7146428199482242, 'Word': u'Mejill\xf3n', 'picked': True, 'Mean_Arousal': 3.5789473684210527, 'Mean_Valence': 5.342105263157895, 'SD_Familiarity': 2.3430749027719964, 'Length': 8, 'Frequency': 3.21, 'PATH_spanish': u'../stimuli_figure/Mussel_es.jpeg', 'blank_dur': 0.6391425792144511, 'English': u'Mussel', 'log_frequency': 1.1662709371419244, 'PATH_english': u'../stimuli_figure/Mussel_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 2.0747071294114563, 'SD_Valence': 1.6648401561041688, 'Mean_Concreteness': 7.76}, {'Category': u'object', 'Mean_Familiarity': 3.16, 'SD_Concreteness': 1.5790292376436004, 'Word': u'Bengala', 'picked': True, 'Mean_Arousal': 6.13157894736842, 'Mean_Valence': 4.657894736842105, 'SD_Familiarity': 1.8636880997992489, 'Length': 7, 'Frequency': 1.07, 'PATH_spanish': u'../stimuli_figure/Bengal_es.jpeg', 'blank_dur': 0.5290724997090475, 'English': u'Bengal', 'log_frequency': 0.06765864847381486, 'PATH_english': u'../stimuli_figure/Bengal_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.5451939899481344, 'SD_Valence': 1.75955024642699, 'Mean_Concreteness': 7.08}, {'Category': u'object', 'Mean_Familiarity': 3.64, 'SD_Concreteness': 1.3228756555322954, 'Word': u'Alambre', 'picked': True, 'Mean_Arousal': 4.026315789473684, 'Mean_Valence': 3.263157894736842, 'SD_Familiarity': 2.0591260281974, 'Length': 7, 'Frequency': 4.64, 'PATH_spanish': u'../stimuli_figure/Wire_es.jpeg', 'blank_dur': 0.3099716753942492, 'English': u'Wire', 'log_frequency': 1.534714366238164, 'PATH_english': u'../stimuli_figure/Wire_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 2.1496302900890374, 'SD_Valence': 1.605467188488873, 'Mean_Concreteness': 7.4}, {'Category': u'object', 'Mean_Familiarity': 4.04, 'SD_Concreteness': 1.6753109164172073, 'Word': u'Bistur\xed', 'picked': True, 'Mean_Arousal': 6.526315789473684, 'Mean_Valence': 3.263157894736842, 'SD_Familiarity': 2.4234960972391377, 'Length': 7, 'Frequency': 6.07, 'PATH_spanish': u'../stimuli_figure/Scalpel_es.jpeg', 'blank_dur': 0.6316941522223725, 'English': u'Scalpel', 'log_frequency': 1.803358605071407, 'PATH_english': u'../stimuli_figure/Scalpel_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 2.063018545530653, 'SD_Valence': 2.0883746496014908, 'Mean_Concreteness': 7.84}, {'Category': u'animal', 'Mean_Familiarity': 3.16, 'SD_Concreteness': 1.6329931618554518, 'Word': u'Orangut\xe1n', 'picked': True, 'Mean_Arousal': 5.973684210526316, 'Mean_Valence': 5.5, 'SD_Familiarity': 2.173323108360405, 'Length': 9, 'Frequency': 1.07, 'PATH_spanish': u'../stimuli_figure/Orangutan_es.jpeg', 'blank_dur': 0.6618224242132063, 'English': u'Orangutan', 'log_frequency': 0.06765864847381486, 'PATH_english': u'../stimuli_figure/Orangutan_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.9657450565400183, 'SD_Valence': 1.955587974069263, 'Mean_Concreteness': 8.0}, {'Category': u'animal', 'Mean_Familiarity': 4.28, 'SD_Concreteness': 1.293573860795485, 'Word': u'Camello', 'picked': True, 'Mean_Arousal': 4.868421052631579, 'Mean_Valence': 5.815789473684211, 'SD_Familiarity': 2.622339922028925, 'Length': 7, 'Frequency': 2.32, 'PATH_spanish': u'../stimuli_figure/Camel_es.jpeg', 'blank_dur': 0.3334736844836794, 'English': u'Camel', 'log_frequency': 0.8415671856782185, 'PATH_english': u'../stimuli_figure/Camel_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.9054835894898383, 'SD_Valence': 1.5041431637924283, 'Mean_Concreteness': 7.56}, {'Category': u'animal', 'Mean_Familiarity': 3.32, 'SD_Concreteness': 2.103172207246315, 'Word': u'Gorri\xf3n', 'picked': True, 'Mean_Arousal': 4.368421052631579, 'Mean_Valence': 5.7105263157894735, 'SD_Familiarity': 2.478574859336174, 'Length': 7, 'Frequency': 0.89, 'PATH_spanish': u'../stimuli_figure/Sparrow_es.jpeg', 'blank_dur': 0.4846369703094288, 'English': u'Sparrow', 'log_frequency': -0.11653381625595152, 'PATH_english': u'../stimuli_figure/Sparrow_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.894815866852117, 'SD_Valence': 1.3931860188332874, 'Mean_Concreteness': 7.56}, {'Category': u'animal', 'Mean_Familiarity': 3.48, 'SD_Concreteness': 1.2741009902410934, 'Word': u'Leopardo', 'picked': True, 'Mean_Arousal': 6.289473684210527, 'Mean_Valence': 6.078947368421053, 'SD_Familiarity': 1.939071942966532, 'Length': 8, 'Frequency': 0.54, 'PATH_spanish': u'../stimuli_figure/Leopard_es.jpeg', 'blank_dur': 0.5395122110157778, 'English': u'Leopard', 'log_frequency': -0.6161861394238171, 'PATH_english': u'../stimuli_figure/Leopard_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.844024604643876, 'SD_Valence': 1.9225768033352053, 'Mean_Concreteness': 7.96}, {'Category': u'animal', 'Mean_Familiarity': 3.96, 'SD_Concreteness': 2.0631690833925047, 'Word': u'Canario', 'picked': True, 'Mean_Arousal': 4.3421052631578965, 'Mean_Valence': 6.052631578947367, 'SD_Familiarity': 2.207562758639793, 'Length': 7, 'Frequency': 5.54, 'PATH_spanish': u'../stimuli_figure/Canary_es.jpeg', 'blank_dur': 0.3116836543755239, 'English': u'Canary', 'log_frequency': 1.7119945007591924, 'PATH_english': u'../stimuli_figure/Canary_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 2.030528033967596, 'SD_Valence': 1.6431243874063004, 'Mean_Concreteness': 6.44}, {'Category': u'object', 'Mean_Familiarity': 3.6, 'SD_Concreteness': 1.3228756555322954, 'Word': u'Misil', 'picked': True, 'Mean_Arousal': 6.789473684210527, 'Mean_Valence': 1.5526315789473684, 'SD_Familiarity': 2.3804761428476167, 'Length': 5, 'Frequency': 5.0, 'PATH_spanish': u'../stimuli_figure/Missile_es.jpeg', 'blank_dur': 0.6344728964787287, 'English': u'Missile', 'log_frequency': 1.6094379124341005, 'PATH_english': u'../stimuli_figure/Missile_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.9885876386486108, 'SD_Valence': 0.7240041966823505, 'Mean_Concreteness': 7.8}, {'Category': u'object', 'Mean_Familiarity': 4.96, 'SD_Concreteness': 1.9578900207451213, 'Word': u'Ladrillo', 'picked': True, 'Mean_Arousal': 3.3157894736842106, 'Mean_Valence': 4.2368421052631575, 'SD_Familiarity': 2.5735837529276826, 'Length': 8, 'Frequency': 8.04, 'PATH_spanish': u'../stimuli_figure/Brick_es.jpeg', 'blank_dur': 0.4486928632895604, 'English': u'Brick', 'log_frequency': 2.0844290831908747, 'PATH_english': u'../stimuli_figure/Brick_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.817412225590012, 'SD_Valence': 1.4965584036303192, 'Mean_Concreteness': 6.6}, {'Category': u'object', 'Mean_Familiarity': 3.64, 'SD_Concreteness': 1.8726095873584199, 'Word': u'Tr\xedpode', 'picked': True, 'Mean_Arousal': 3.8157894736842106, 'Mean_Valence': 4.578947368421051, 'SD_Familiarity': 2.5311394008759507, 'Length': 7, 'Frequency': 1.79, 'PATH_spanish': u'../stimuli_figure/Tripod_es.jpeg', 'blank_dur': 0.5534253358111687, 'English': u'Tripod', 'log_frequency': 0.5822156198526637, 'PATH_english': u'../stimuli_figure/Tripod_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 2.179204704397911, 'SD_Valence': 1.2867637794801643, 'Mean_Concreteness': 6.56}, {'Category': u'animal', 'Mean_Familiarity': 5.0, 'SD_Concreteness': 1.2355835328567109, 'Word': u'Caracol', 'picked': True, 'Mean_Arousal': 3.210526315789473, 'Mean_Valence': 5.052631578947368, 'SD_Familiarity': 1.9790570145063195, 'Length': 7, 'Frequency': 5.36, 'PATH_spanish': u'../stimuli_figure/Snail_es.jpeg', 'blank_dur': 0.3381709018968053, 'English': u'Snail', 'log_frequency': 1.6789639750827108, 'PATH_english': u'../stimuli_figure/Snail_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 2.1073602641865827, 'SD_Valence': 1.9583137868136629, 'Mean_Concreteness': 7.88}, {'Category': u'object', 'Mean_Familiarity': 3.6, 'SD_Concreteness': 2.321637353248779, 'Word': u'Ametralladora', 'picked': True, 'Mean_Arousal': 7.315789473684211, 'Mean_Valence': 1.4473684210526316, 'SD_Familiarity': 2.3273733406281565, 'Length': 13, 'Frequency': 0.08, 'PATH_spanish': u'../stimuli_figure/Machine gun_es.jpeg', 'blank_dur': 0.5122422676320696, 'English': u'Machine gun', 'log_frequency': -2.525728644308256, 'PATH_english': u'../stimuli_figure/Machine gun_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 2.067839493456156, 'SD_Valence': 0.8913205635931025, 'Mean_Concreteness': 6.84}, {'Category': u'object', 'Mean_Familiarity': 4.88, 'SD_Concreteness': 2.165272684236664, 'Word': u'Sacapuntas', 'picked': True, 'Mean_Arousal': 3.684210526315789, 'Mean_Valence': 4.7105263157894735, 'SD_Familiarity': 3.073000705065545, 'Length': 10, 'Frequency': 0.18, 'PATH_spanish': u'../stimuli_figure/Sharpener_es.jpeg', 'blank_dur': 0.5486317707485023, 'English': u'Sharpener', 'log_frequency': -1.7147984280919266, 'PATH_english': u'../stimuli_figure/Sharpener_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.861491165675036, 'SD_Valence': 1.2060185722392749, 'Mean_Concreteness': 7.416666666666668}, {'Category': u'object', 'Mean_Familiarity': 4.64, 'SD_Concreteness': 2.1969676071045443, 'Word': u'Flecha', 'picked': True, 'Mean_Arousal': 5.5, 'Mean_Valence': 3.763157894736842, 'SD_Familiarity': 2.51462389500564, 'Length': 6, 'Frequency': 4.46, 'PATH_spanish': u'../stimuli_figure/Arrow_es.jpeg', 'blank_dur': 0.4196775318598312, 'English': u'Arrow', 'log_frequency': 1.4951487660319729, 'PATH_english': u'../stimuli_figure/Arrow_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 2.1529363983023595, 'SD_Valence': 1.9233165404935268, 'Mean_Concreteness': 6.08}, {'Category': u'animal', 'Mean_Familiarity': 3.6, 'SD_Concreteness': 2.1268129521265693, 'Word': u'Lince', 'picked': True, 'Mean_Arousal': 6.657894736842105, 'Mean_Valence': 6.894736842105262, 'SD_Familiarity': 2.179449471770337, 'Length': 5, 'Frequency': 1.25, 'PATH_spanish': u'../stimuli_figure/Lynx_es.jpeg', 'blank_dur': 0.380255398037512, 'English': u'Lynx', 'log_frequency': 0.22314355131420974, 'PATH_english': u'../stimuli_figure/Lynx_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.7285569014623643, 'SD_Valence': 1.3313166351136376, 'Mean_Concreteness': 6.76}, {'Category': u'object', 'Mean_Familiarity': 4.76, 'SD_Concreteness': 1.7559422921421233, 'Word': u'Pegamento', 'picked': True, 'Mean_Arousal': 3.657894736842105, 'Mean_Valence': 4.394736842105264, 'SD_Familiarity': 2.3323807579381195, 'Length': 9, 'Frequency': 1.61, 'PATH_spanish': u'../stimuli_figure/Glue_es.jpeg', 'blank_dur': 0.3683925557348123, 'English': u'Glue', 'log_frequency': 0.4762341789963717, 'PATH_english': u'../stimuli_figure/Glue_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.7441224199141598, 'SD_Valence': 1.4803117583297167, 'Mean_Concreteness': 7.4}, {'Category': u'animal', 'Mean_Familiarity': 4.0, 'SD_Concreteness': 2.051016008388688, 'Word': u'Ping\xfcino', 'picked': True, 'Mean_Arousal': 4.947368421052632, 'Mean_Valence': 7.0, 'SD_Familiarity': 2.6770630673681683, 'Length': 8, 'Frequency': 1.96, 'PATH_spanish': u'../stimuli_figure/Penguin_es.jpeg', 'blank_dur': 0.6507459540827403, 'English': u'Penguin', 'log_frequency': 0.6729444732424258, 'PATH_english': u'../stimuli_figure/Penguin_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 2.2773546581452395, 'SD_Valence': 1.506741607001768, 'Mean_Concreteness': 7.04}, {'Category': u'object', 'Mean_Familiarity': 4.84, 'SD_Concreteness': 2.1617893822787955, 'Word': u'Alfombra', 'picked': True, 'Mean_Arousal': 2.9210526315789487, 'Mean_Valence': 5.026315789473684, 'SD_Familiarity': 1.9723082923316024, 'Length': 8, 'Frequency': 16.07, 'PATH_spanish': u'../stimuli_figure/Carpet_es.jpeg', 'blank_dur': 0.6600748839378505, 'English': u'Carpet', 'log_frequency': 2.776954179749421, 'PATH_english': u'../stimuli_figure/Carpet_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.8215167268911472, 'SD_Valence': 1.1965455256191009, 'Mean_Concreteness': 7.44}, {'Category': u'animal', 'Mean_Familiarity': 3.76, 'SD_Concreteness': 1.8484227510682358, 'Word': u'Tigre', 'picked': True, 'Mean_Arousal': 7.236842105263157, 'Mean_Valence': 5.973684210526316, 'SD_Familiarity': 2.50466231922256, 'Length': 5, 'Frequency': 4.29, 'PATH_spanish': u'../stimuli_figure/Tiger_es.jpeg', 'blank_dur': 0.45006338368343535, 'English': u'Tiger', 'log_frequency': 1.4562867329399256, 'PATH_english': u'../stimuli_figure/Tiger_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.837068912864095, 'SD_Valence': 2.019992535512876, 'Mean_Concreteness': 7.6}, {'Category': u'object', 'Mean_Familiarity': 3.2, 'SD_Concreteness': 2.0066555924389893, 'Word': u'Lancha', 'picked': True, 'Mean_Arousal': 5.894736842105262, 'Mean_Valence': 6.157894736842105, 'SD_Familiarity': 1.914854215512676, 'Length': 6, 'Frequency': 1.96, 'PATH_spanish': u'../stimuli_figure/Boat_es.jpeg', 'blank_dur': 0.6586195565604661, 'English': u'Boat', 'log_frequency': 0.6729444732424258, 'PATH_english': u'../stimuli_figure/Boat_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.914235062583013, 'SD_Valence': 1.6028069261998623, 'Mean_Concreteness': 7.12}, {'Category': u'animal', 'Mean_Familiarity': 4.52, 'SD_Concreteness': 1.4525839046333966, 'Word': u'Cocodrilo', 'picked': True, 'Mean_Arousal': 6.605263157894738, 'Mean_Valence': 4.631578947368421, 'SD_Familiarity': 2.5839246635044657, 'Length': 9, 'Frequency': 3.21, 'PATH_spanish': u'../stimuli_figure/Crocodile_es.jpeg', 'blank_dur': 0.39543505727485534, 'English': u'Crocodile', 'log_frequency': 1.1662709371419244, 'PATH_english': u'../stimuli_figure/Crocodile_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.823858008997508, 'SD_Valence': 1.93713430908564, 'Mean_Concreteness': 7.88}, {'Category': u'animal', 'Mean_Familiarity': 4.36, 'SD_Concreteness': 1.5524174696260014, 'Word': u'Gaviota', 'picked': True, 'Mean_Arousal': 5.026315789473684, 'Mean_Valence': 5.0, 'SD_Familiarity': 2.325224003546038, 'Length': 7, 'Frequency': 2.5, 'PATH_spanish': u'../stimuli_figure/Seagull_es.jpeg', 'blank_dur': 0.6341510136298575, 'English': u'Seagull', 'log_frequency': 0.9162907318741552, 'PATH_english': u'../stimuli_figure/Seagull_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.9240559932469117, 'SD_Valence': 1.9864405216230223, 'Mean_Concreteness': 7.92}, {'Category': u'animal', 'Mean_Familiarity': 4.4, 'SD_Concreteness': 1.5307950004273383, 'Word': u'Abejorro', 'picked': True, 'Mean_Arousal': 7.078947368421053, 'Mean_Valence': 2.131578947368421, 'SD_Familiarity': 2.4152294576982403, 'Length': 8, 'Frequency': 0.18, 'PATH_spanish': u'../stimuli_figure/Bumblebee_es.jpeg', 'blank_dur': 0.6854457461551342, 'English': u'Bumblebee', 'log_frequency': -1.7147984280919266, 'PATH_english': u'../stimuli_figure/Bumblebee_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.5833863633154823, 'SD_Valence': 1.3187023234692454, 'Mean_Concreteness': 7.52}, {'Category': u'animal', 'Mean_Familiarity': 4.72, 'SD_Concreteness': 1.468559384794046, 'Word': u'Oso', 'picked': True, 'Mean_Arousal': 5.2368421052631575, 'Mean_Valence': 5.605263157894738, 'SD_Familiarity': 2.685144316419509, 'Length': 3, 'Frequency': 11.43, 'PATH_spanish': u'../stimuli_figure/Bear_es.jpeg', 'blank_dur': 0.3557170325195985, 'English': u'Bear', 'log_frequency': 2.4362414778067194, 'PATH_english': u'../stimuli_figure/Bear_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 2.07213443326696, 'SD_Valence': 1.7939760112321024, 'Mean_Concreteness': 7.64}, {'Category': u'animal', 'Mean_Familiarity': 3.32, 'SD_Concreteness': 1.943364779619789, 'Word': u'Asno', 'picked': True, 'Mean_Arousal': 4.526315789473684, 'Mean_Valence': 5.315789473684211, 'SD_Familiarity': 2.3043437243605824, 'Length': 4, 'Frequency': 3.93, 'PATH_spanish': u'../stimuli_figure/Donkey_es.jpeg', 'blank_dur': 0.37769405276055856, 'English': u'Donkey', 'log_frequency': 1.3686394258811698, 'PATH_english': u'../stimuli_figure/Donkey_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.5894388284780532, 'SD_Valence': 1.6942711604969272, 'Mean_Concreteness': 6.88}, {'Category': u'object', 'Mean_Familiarity': 3.56, 'SD_Concreteness': 2.565800719723442, 'Word': u'Jeringa', 'picked': True, 'Mean_Arousal': 6.947368421052633, 'Mean_Valence': 2.0, 'SD_Familiarity': 2.3108440016582685, 'Length': 7, 'Frequency': 1.07, 'PATH_spanish': u'../stimuli_figure/Syringe_es.jpeg', 'blank_dur': 0.655751668155003, 'English': u'Syringe', 'log_frequency': 0.06765864847381486, 'PATH_english': u'../stimuli_figure/Syringe_en.jpeg', 'category': u'Nonliving_Things', 'SD_Arousal': 1.6594914300903707, 'SD_Valence': 1.2080808993852437, 'Mean_Concreteness': 6.4}, {'Category': u'animal', 'Mean_Familiarity': 4.24, 'SD_Concreteness': 2.6223399220289245, 'Word': u'Almeja', 'picked': True, 'Mean_Arousal': 3.4210526315789487, 'Mean_Valence': 4.921052631578949, 'SD_Familiarity': 2.3853720883753127, 'Length': 6, 'Frequency': 0.54, 'PATH_spanish': u'../stimuli_figure/Clam_es.jpeg', 'blank_dur': 0.4188469988800126, 'English': u'Clam', 'log_frequency': -0.6161861394238171, 'PATH_english': u'../stimuli_figure/Clam_en.jpeg', 'category': u'Living_Things', 'SD_Arousal': 1.7496189383941527, 'SD_Valence': 1.6986732334124204, 'Mean_Concreteness': 6.72}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="premask"/>
    <Routine name="trial"/>
    <Routine name="postmask"/>
    <Routine name="jitter1"/>
    <Routine name="discriminate"/>
    <Routine name="visibility"/>
    <Routine name="jitter2"/>
    <LoopTerminator name="main_loop"/>
    <Routine name="end_experiment"/>
  </Flow>
</PsychoPy2experiment>
