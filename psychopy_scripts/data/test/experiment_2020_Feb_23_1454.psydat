ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
VC:\u005cUsers\u005cning\u005cDocuments\u005cpython_works\u005cuncon_semantic\u005cpsychopy_scripts\u005cdata/test/experiment_2020_Feb_23_1454
p8
sS'runtimeInfo'
p9
NsS'name'
p10
Vexperiment
p11
sS'dataNames'
p12
(lp13
S'fixation_onset'
p14
aS'blank_dur'
p15
aS'image_onset_time'
p16
aS'jitter1'
p17
aS'discrim_resptime'
p18
aS'response_window'
p19
aS'correctAns'
p20
aS'response.corr'
p21
aS'response.keys'
p22
aS'response.rt'
p23
aS'visible_resptime'
p24
aS'probe_Frames'
p25
aS'visible.keys'
p26
aS'visible.corr'
p27
aS'visible.rt'
p28
aS'jitter2'
p29
asS'autoLog'
p30
I01
sS'extraInfo'
p31
(dp32
Vn_square
p33
V32
p34
sVopacity
p35
V0.6
p36
sS'frameRate'
p37
cnumpy.core.multiarray
scalar
p38
(cnumpy
dtype
p39
(S'f8'
I0
I1
tRp40
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xa7hf)"\xefM@'
tRp41
sVpremask
p42
V20
p43
sVsession
p44
V1
sVimage_size
p45
V128
p46
sS'date'
p47
V2020_Feb_23_1454
p48
sVpostmask
p49
V20
p50
sVlowest_opacity
p51
V0.2
p52
sVprobeFrames
p53
V5
sVparticipant
p54
Vtest
p55
sS'expName'
p56
g11
ssS'loopsUnfinished'
p57
(lp58
g1
(cpsychopy.data
TrialHandler
p59
g3
NtRp60
(dp61
S'origin'
p62
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a"""\u000aThis experiment was created using PsychoPy2 Experiment Builder (v1.82.01), February 23, 2020, at 14:54\u000aIf you publish work using this script please cite the relevant PsychoPy publications\u000a  Peirce, JW (2007) PsychoPy - Psychophysics software in Python. Journal of Neuroscience Methods, 162(1-2), 8-13.\u000a  Peirce, JW (2009) Generating stimuli for neuroscience using PsychoPy. Frontiers in Neuroinformatics, 2:10. doi: 10.3389/neuro.11.010.2008\u000a"""\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = u'experiment'  # from the Builder filename that created this script\u000aexpInfo = {u'n_square': u'32', u'opacity': u'0.6', u'lowest_opacity': u'0.2', u'probeFrames': u'5', u'participant': u'test', u'premask': u'20', u'session': u'1', u'image_size': u'128', u'postmask': u'20'}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s/%s_%s' %(expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=(1280, 720), fullscr=True, screen=0, allowGUI=False, allowStencil=False,\u000a    monitor=u'testMonitor', color=[-1.000,-1.000,-1.000], colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    )\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "intro"\u000aintroClock = core.Clock()\u000aglobalClock = core.Clock()\u000a\u000apremask_dur = int(expInfo['premask'])\u000apostmask_dur = int(expInfo['postmask'])\u000an_square = int(expInfo['n_square'])\u000aimage_size = int(expInfo['image_size'])\u000aopacity = float(expInfo['opacity'])\u000a\u000acurr = int(expInfo['probeFrames'])\u000alowest_opacity = float(expInfo['lowest_opacity'])\u000acount = 0\u000a\u000aimport time\u000afrom psychopy import parallel\u000aparallel.setPortAddress(888)\u000await_msg = "Wating for Scanner ..."\u000amsg = visual.TextStim(win,color = 'DarkGray',text = wait_msg)\u000a\u000a# jitter 1\u000ajitter_counter = 0\u000ajitter1_dur_options = np.concatenate([[1.5]*16,[2.0]*8,[2.5]*6,[3.0]*4,[3.5]*4])\u000anp.random.shuffle(jitter1_dur_options)\u000a\u000a# jitter 2\u000ajitter2_dur_options = np.concatenate([[6.0]*16,[6.5]*8,[7.0]*6,[7.5]*4,[8.0]*4])\u000anp.random.shuffle(jitter2_dur_options)\u000a\u000a\u000a# Initialize components for Routine "intoPrepare"\u000aintoPrepareClock = core.Clock()\u000apreparation = visual.TextStim(win=win, ori=0, name='preparation',\u000a    text=None,    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000afirst_blank = visual.TextStim(win=win, ori=0, name='first_blank',\u000a    text=None,    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=-1.0)\u000a\u000a# Initialize components for Routine "fixation"\u000afixationClock = core.Clock()\u000afixation_cross = visual.TextStim(win=win, ori=0, name='fixation_cross',\u000a    text='+',    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000ablank_period = visual.TextStim(win=win, ori=0, name='blank_period',\u000a    text=None,    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=-1.0)\u000a\u000a\u000a# Initialize components for Routine "premask"\u000apremaskClock = core.Clock()\u000apremasking = visual.GratingStim(win=win, name='premasking',units='pix', \u000a    tex=np.random.rand(n_square,n_square)*2 - 1, mask=None,\u000a    ori=0, pos=[0, -0], size=(image_size, image_size), sf=None, phase=0.0,\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000a# Initialize components for Routine "trial"\u000atrialClock = core.Clock()\u000aimport sys\u000areload(sys)\u000asys.setdefaultencoding("latin-1")\u000apresentation = visual.ImageStim(win=win, name='presentation',units='pix', \u000a    image='sin', mask=None,\u000a    ori=0, pos=(0, 0), size=(image_size, image_size),\u000a    color=[1,1,1], colorSpace='rgb', opacity=1.0,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=-1.0)\u000a\u000a# Initialize components for Routine "postmask"\u000apostmaskClock = core.Clock()\u000apostmasking = visual.GratingStim(win=win, name='postmasking',units='pix', \u000a    tex=np.random.rand(n_square,n_square)*2 -1, mask=None,\u000a    ori=0, pos=[0, 0], size=(image_size, image_size), sf=None, phase=0.0,\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000a# Initialize components for Routine "jitter1"\u000ajitter1Clock = core.Clock()\u000ajitter_delay = visual.TextStim(win=win, ori=0, name='jitter_delay',\u000a    text='+',    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a# Initialize components for Routine "discriminate"\u000adiscriminateClock = core.Clock()\u000a\u000aresponse_options = visual.TextStim(win=win, ori=0, name='response_options',\u000a    text='default text',    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=-1.0)\u000a\u000a# Initialize components for Routine "visibility"\u000avisibilityClock = core.Clock()\u000a\u000avisibility_message = visual.TextStim(win=win, ori=0, name='visibility_message',\u000a    text='?',    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=-1.0)\u000a\u000a# Initialize components for Routine "jitter2"\u000ajitter2Clock = core.Clock()\u000a\u000apost_jitter = visual.TextStim(win=win, ori=0, name='post_jitter',\u000a    text='+',    font='Arial',\u000a    pos=[0, 0], height=0.1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=-1.0)\u000a\u000a# Initialize components for Routine "end_experiment"\u000aend_experimentClock = core.Clock()\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a#------Prepare to start Routine "intro"-------\u000at = 0\u000aintroClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000amsg.draw()\u000awin.flip()\u000a\u000awhile True:\u000a    if (event.getKeys() == ['q']):#(parallel.readPin(10) == 1) or \u000a        break\u000a    else:\u000a        time.sleep(0.0001) # give 1ms to other processes\u000aglobalClock.reset()\u000astartTime = globalClock.getTime()\u000a# keep track of which components have finished\u000aintroComponents = []\u000afor thisComponent in introComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "intro"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = introClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in introComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "intro"-------\u000afor thisComponent in introComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a# the Routine "intro" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "intoPrepare"-------\u000at = 0\u000aintoPrepareClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(13.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aintoPrepareComponents = []\u000aintoPrepareComponents.append(preparation)\u000aintoPrepareComponents.append(first_blank)\u000afor thisComponent in intoPrepareComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "intoPrepare"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = intoPrepareClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *preparation* updates\u000a    if t >= 0.0 and preparation.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        preparation.tStart = t  # underestimates by a little under one frame\u000a        preparation.frameNStart = frameN  # exact frame index\u000a        preparation.setAutoDraw(True)\u000a    if preparation.status == STARTED and t >= (0.0 + (3-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        preparation.setAutoDraw(False)\u000a    \u000a    # *first_blank* updates\u000a    if t >= 3 and first_blank.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        first_blank.tStart = t  # underestimates by a little under one frame\u000a        first_blank.frameNStart = frameN  # exact frame index\u000a        first_blank.setAutoDraw(True)\u000a    if first_blank.status == STARTED and t >= (3 + (10-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        first_blank.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in intoPrepareComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "intoPrepare"-------\u000afor thisComponent in intoPrepareComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a# set up handler to look after randomisation of conditions etc\u000amain_loop = data.TrialHandler(nReps=1, method='random', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('..\u005c\u005cdata\u005c\u005csampled_words.csv'),\u000a    seed=None, name='main_loop')\u000athisExp.addLoop(main_loop)  # add the loop to the experiment\u000athisMain_loop = main_loop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisMain_loop.rgb)\u000aif thisMain_loop != None:\u000a    for paramName in thisMain_loop.keys():\u000a        exec(paramName + '= thisMain_loop.' + paramName)\u000a\u000afor thisMain_loop in main_loop:\u000a    currentLoop = main_loop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisMain_loop.rgb)\u000a    if thisMain_loop != None:\u000a        for paramName in thisMain_loop.keys():\u000a            exec(paramName + '= thisMain_loop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "fixation"-------\u000a    t = 0\u000a    fixationClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    main_loop.addData("fixation_onset", globalClock.getTime() - startTime)\u000a    main_loop.addData("blank_dur",blank_dur)\u000a    # keep track of which components have finished\u000a    fixationComponents = []\u000a    fixationComponents.append(fixation_cross)\u000a    fixationComponents.append(blank_period)\u000a    for thisComponent in fixationComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "fixation"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = fixationClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *fixation_cross* updates\u000a        if t >= 0.0 and fixation_cross.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            fixation_cross.tStart = t  # underestimates by a little under one frame\u000a            fixation_cross.frameNStart = frameN  # exact frame index\u000a            fixation_cross.setAutoDraw(True)\u000a        if fixation_cross.status == STARTED and t >= (0.0 + (0.5-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            fixation_cross.setAutoDraw(False)\u000a        \u000a        # *blank_period* updates\u000a        if (fixation_cross.status == FINISHED) and blank_period.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            blank_period.tStart = t  # underestimates by a little under one frame\u000a            blank_period.frameNStart = frameN  # exact frame index\u000a            blank_period.setAutoDraw(True)\u000a        if blank_period.status == STARTED and t >= (blank_period.tStart + blank_dur):\u000a            blank_period.setAutoDraw(False)\u000a        \u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in fixationComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "fixation"-------\u000a    for thisComponent in fixationComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    \u000a    # the Routine "fixation" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "premask"-------\u000a    t = 0\u000a    premaskClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    premaskComponents = []\u000a    premaskComponents.append(premasking)\u000a    for thisComponent in premaskComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "premask"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = premaskClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *premasking* updates\u000a        if t >= 0.0 and premasking.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            premasking.tStart = t  # underestimates by a little under one frame\u000a            premasking.frameNStart = frameN  # exact frame index\u000a            premasking.setAutoDraw(True)\u000a        if premasking.status == STARTED and frameN >= (premasking.frameNStart + premask_dur):\u000a            premasking.setAutoDraw(False)\u000a        if premasking.status == STARTED:  # only update if being drawn\u000a            premasking.setTex(np.random.rand(n_square,n_square)*2 - 1, log=False)\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in premaskComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "premask"-------\u000a    for thisComponent in premaskComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # the Routine "premask" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "trial"-------\u000a    t = 0\u000a    trialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    main_loop.addData("image_onset_time", globalClock.getTime() - startTime)\u000a    presentation.setImage(PATH)\u000a    presentation.setOpacity(opacity)\u000a    # keep track of which components have finished\u000a    trialComponents = []\u000a    trialComponents.append(presentation)\u000a    for thisComponent in trialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "trial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = trialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        \u000a        # *presentation* updates\u000a        if t >= 0.0 and presentation.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            presentation.tStart = t  # underestimates by a little under one frame\u000a            presentation.frameNStart = frameN  # exact frame index\u000a            presentation.setAutoDraw(True)\u000a        if presentation.status == STARTED and frameN >= (presentation.frameNStart + curr):\u000a            presentation.setAutoDraw(False)\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in trialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "trial"-------\u000a    for thisComponent in trialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    \u000a    # the Routine "trial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "postmask"-------\u000a    t = 0\u000a    postmaskClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    postmaskComponents = []\u000a    postmaskComponents.append(postmasking)\u000a    for thisComponent in postmaskComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "postmask"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = postmaskClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *postmasking* updates\u000a        if t >= 0.0 and postmasking.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            postmasking.tStart = t  # underestimates by a little under one frame\u000a            postmasking.frameNStart = frameN  # exact frame index\u000a            postmasking.setAutoDraw(True)\u000a        if postmasking.status == STARTED and frameN >= (postmasking.frameNStart + postmask_dur):\u000a            postmasking.setAutoDraw(False)\u000a        if postmasking.status == STARTED:  # only update if being drawn\u000a            postmasking.setTex(np.random.rand(n_square,n_square)*2 -1, log=False)\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in postmaskComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "postmask"-------\u000a    for thisComponent in postmaskComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # the Routine "postmask" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "jitter1"-------\u000a    t = 0\u000a    jitter1Clock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    jitter1_dur = jitter1_dur_options[jitter_counter]\u000a    main_loop.addData('jitter1',jitter1_dur)\u000a    # keep track of which components have finished\u000a    jitter1Components = []\u000a    jitter1Components.append(jitter_delay)\u000a    for thisComponent in jitter1Components:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "jitter1"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = jitter1Clock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *jitter_delay* updates\u000a        if t >= 0.0 and jitter_delay.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            jitter_delay.tStart = t  # underestimates by a little under one frame\u000a            jitter_delay.frameNStart = frameN  # exact frame index\u000a            jitter_delay.setAutoDraw(True)\u000a        if jitter_delay.status == STARTED and t >= (0.0 + (jitter1_dur-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            jitter_delay.setAutoDraw(False)\u000a        \u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in jitter1Components:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "jitter1"-------\u000a    for thisComponent in jitter1Components:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    \u000a    # the Routine "jitter1" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "discriminate"-------\u000a    t = 0\u000a    discriminateClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(1.500000)\u000a    # update component parameters for each repeat\u000a    main_loop.addData("discrim_resptime", globalClock.getTime() - startTime)\u000a    resp_options = [['nV_V',['Nonliving_Things','Living_Things']],\u000a                    ['V_nV',['Living_Things','Nonliving_Things']]]\u000a    idx = np.random.choice([0,1])\u000a    resp_msg = '{}'.format(resp_options[idx][0])\u000a    main_loop.addData("response_window", resp_options[idx][0])\u000a    response_options.setText(resp_msg)\u000a    response = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000a    response.status = NOT_STARTED\u000a    # keep track of which components have finished\u000a    discriminateComponents = []\u000a    discriminateComponents.append(response_options)\u000a    discriminateComponents.append(response)\u000a    for thisComponent in discriminateComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "discriminate"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = discriminateClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        \u000a        # *response_options* updates\u000a        if t >= 0.0 and response_options.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            response_options.tStart = t  # underestimates by a little under one frame\u000a            response_options.frameNStart = frameN  # exact frame index\u000a            response_options.setAutoDraw(True)\u000a        if response_options.status == STARTED and t >= (0.0 + (1.5-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            response_options.setAutoDraw(False)\u000a        \u000a        # *response* updates\u000a        if t >= 0.0 and response.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            response.tStart = t  # underestimates by a little under one frame\u000a            response.frameNStart = frameN  # exact frame index\u000a            response.status = STARTED\u000a            # keyboard checking is just starting\u000a            response.clock.reset()  # now t=0\u000a            event.clearEvents(eventType='keyboard')\u000a        if response.status == STARTED and t >= (0.0 + (1.5-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            response.status = STOPPED\u000a        if response.status == STARTED:\u000a            theseKeys = event.getKeys(keyList=['1', '2'])\u000a            \u000a            # check for quit:\u000a            if "escape" in theseKeys:\u000a                endExpNow = True\u000a            if len(theseKeys) > 0:  # at least one key was pressed\u000a                response.keys = theseKeys[-1]  # just the last key pressed\u000a                response.rt = response.clock.getTime()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in discriminateComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "discriminate"-------\u000a    for thisComponent in discriminateComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    temp_correctAns = np.where(np.array(resp_options[idx][1]) == category)[0][0]+1\u000a    main_loop.addData('correctAns',temp_correctAns)\u000a    # objective accuracy\u000a    if (response.keys == str(temp_correctAns)) or (response.keys == temp_correctAns):\u000a       temp_corr = 1\u000a    else:\u000a        temp_corr = 0\u000a    main_loop.addData('response.corr' , temp_corr)\u000a    # check responses\u000a    if response.keys in ['', [], None]:  # No response was made\u000a       response.keys=None\u000a    # store data for main_loop (TrialHandler)\u000a    main_loop.addData('response.keys',response.keys)\u000a    if response.keys != None:  # we had a response\u000a        main_loop.addData('response.rt', response.rt)\u000a    \u000a    #------Prepare to start Routine "visibility"-------\u000a    t = 0\u000a    visibilityClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(1.500000)\u000a    # update component parameters for each repeat\u000a    main_loop.addData("visible_resptime", globalClock.getTime() - startTime)\u000a    visible = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000a    visible.status = NOT_STARTED\u000a    # keep track of which components have finished\u000a    visibilityComponents = []\u000a    visibilityComponents.append(visibility_message)\u000a    visibilityComponents.append(visible)\u000a    for thisComponent in visibilityComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "visibility"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = visibilityClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        \u000a        # *visibility_message* updates\u000a        if t >= 0.0 and visibility_message.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            visibility_message.tStart = t  # underestimates by a little under one frame\u000a            visibility_message.frameNStart = frameN  # exact frame index\u000a            visibility_message.setAutoDraw(True)\u000a        if visibility_message.status == STARTED and t >= (0.0 + (1.5-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            visibility_message.setAutoDraw(False)\u000a        \u000a        # *visible* updates\u000a        if t >= 0.0 and visible.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            visible.tStart = t  # underestimates by a little under one frame\u000a            visible.frameNStart = frameN  # exact frame index\u000a            visible.status = STARTED\u000a            # keyboard checking is just starting\u000a            visible.clock.reset()  # now t=0\u000a            event.clearEvents(eventType='keyboard')\u000a        if visible.status == STARTED and t >= (0.0 + (1.5-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            visible.status = STOPPED\u000a        if visible.status == STARTED:\u000a            theseKeys = event.getKeys(keyList=['1', '2', '3'])\u000a            \u000a            # check for quit:\u000a            if "escape" in theseKeys:\u000a                endExpNow = True\u000a            if len(theseKeys) > 0:  # at least one key was pressed\u000a                visible.keys = theseKeys[-1]  # just the last key pressed\u000a                visible.rt = visible.clock.getTime()\u000a                # was this 'correct'?\u000a                if (visible.keys == str("'1'")) or (visible.keys == "'1'"):\u000a                    visible.corr = 1\u000a                else:\u000a                    visible.corr = 0\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in visibilityComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "visibility"-------\u000a    for thisComponent in visibilityComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    count += 1\u000a    main_loop.addData('probe_Frames',curr)\u000a    if (visible.keys == str('1')) or (visible.keys == '1'):# invisible\u000a        opacity += np.random.choice([0.1, 0.2, 0.3],size = 1)[0]\u000a        if opacity > 1: opacity = 1\u000a        #curr += np.random.choice([1,2,3],size=1)[0]\u000a        #if curr < 1:  curr = 1\u000a    elif (visible.keys == str('2')) or (visible.keys == '2'):# partially aware\u000a        opacity -= 0.1\u000a        if opacity < lowest_opacity: opacity = lowest_opacity\u000a        #curr -= 1\u000a        #if curr < 1:  curr = 1 \u000a    elif (visible.keys == str('3')) or (visible.keys == '3'): # visible\u000a        opacity -= np.random.choice([0.1, 0.2, 0.3],size = 1)[0]\u000a        if opacity < lowest_opacity: opacity = lowest_opacity\u000a        #curr -= np.random.choice([2,3],size=1,p=[0.5,0.5])[0]\u000a        #if curr < 1: curr = 1\u000a    \u000a    # check responses\u000a    if visible.keys in ['', [], None]:  # No response was made\u000a       visible.keys=None\u000a       # was no response the correct answer?!\u000a       if str("'1'").lower() == 'none': visible.corr = 1  # correct non-response\u000a       else: visible.corr = 0  # failed to respond (incorrectly)\u000a    # store data for main_loop (TrialHandler)\u000a    main_loop.addData('visible.keys',visible.keys)\u000a    main_loop.addData('visible.corr', visible.corr)\u000a    if visible.keys != None:  # we had a response\u000a        main_loop.addData('visible.rt', visible.rt)\u000a    \u000a    #------Prepare to start Routine "jitter2"-------\u000a    t = 0\u000a    jitter2Clock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    jitter2_delay_dur = jitter2_dur_options[jitter_counter]\u000a    main_loop.addData('jitter2',jitter2_delay_dur)\u000a    jitter_counter += 1\u000a    # keep track of which components have finished\u000a    jitter2Components = []\u000a    jitter2Components.append(post_jitter)\u000a    for thisComponent in jitter2Components:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "jitter2"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = jitter2Clock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        \u000a        # *post_jitter* updates\u000a        if t >= 0.0 and post_jitter.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            post_jitter.tStart = t  # underestimates by a little under one frame\u000a            post_jitter.frameNStart = frameN  # exact frame index\u000a            post_jitter.setAutoDraw(True)\u000a        if post_jitter.status == STARTED and t >= (0.0 + (jitter2_delay_dur-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            post_jitter.setAutoDraw(False)\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in jitter2Components:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "jitter2"-------\u000a    for thisComponent in jitter2Components:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    meanacc = main_loop.data['response.corr'].mean()\u000a    meanvis = main_loop.data['visible.corr'].mean()\u000a    \u000a    print('{}/{}, mean unconscious = {:.2f},frame = {},p(correct) = {:.2f}'.format(\u000a            main_loop.thisN,main_loop.nTotal,\u000a            meanvis,curr,meanacc))\u000a    # the Routine "jitter2" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'main_loop'\u000a\u000a# get names of stimulus parameters\u000aif main_loop.trialList in ([], [None], None):  params = []\u000aelse:  params = main_loop.trialList[0].keys()\u000a# save data for this loop\u000amain_loop.saveAsText(filename + 'main_loop.csv', delim=',',\u000a    stimOut=params,\u000a    dataOut=['n','all_mean','all_std', 'all_raw'])\u000a\u000a#------Prepare to start Routine "end_experiment"-------\u000at = 0\u000aend_experimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000a\u000a# keep track of which components have finished\u000aend_experimentComponents = []\u000afor thisComponent in end_experimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "end_experiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = end_experimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in end_experimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "end_experiment"-------\u000afor thisComponent in end_experimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a# the Routine "end_experiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000aprint(globalClock.getTime() - startTime)\u000aprint("mean unconscious = {:.2f}, frame = {}, p(correct) = {:.2f}".format(\u000a    meanvis,curr,meanacc))\u000awin.close()\u000acore.quit()\u000a
p63
sS'thisTrial'
p64
g1
(cpsychopy.data
TrialType
p65
c__builtin__
dict
p66
(dp67
S'Category'
p68
S'object'
p69
sS'Mean_Familiarity'
p70
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\t@'
tRp71
sS'blank_dur'
p72
g38
(g40
S'\x9d\xb6\xf2/\xd0\x15\xe2?'
tRp73
sS'Word'
p74
S'Lancha'
p75
sS'Mean_Valence'
p76
g38
(g40
S'\x1b\xcak(\xaf\xa1\x18@'
tRp77
sS'SD_Familiarity'
p78
g38
(g40
S'?\xc1\x83,>\xa3\xfe?'
tRp79
sS'Length'
p80
g38
(g39
(S'i8'
I0
I1
tRp81
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp82
sS'picked'
p83
g38
(g39
(S'b1'
I0
I1
tRp84
(I3
S'|'
NNNI-1
I-1
I0
tbS'\x01'
tRp85
sS'English'
p86
S'Boat'
p87
sS'PATH'
p88
S'../stimuli_figure/Boat.jpeg'
p89
sS'SD_Valence'
p90
g38
(g40
S'\x86J\x1d\xe0\x18\xa5\xf9?'
tRp91
sS'category'
p92
S'Nonliving_Things'
p93
sS'SD_Concreteness'
p94
g38
(g40
S'A\xe3~r\xa1\r\x00@'
tRp95
sS'Mean_Arousal'
p96
g38
(g40
S'By\r\xe55\x94\x17@'
tRp97
sS'Frequency'
p98
g38
(g40
S'\\\x8f\xc2\xf5(\\\xff?'
tRp99
sS'log_frequency'
p100
g38
(g40
S'\x8f4\x13\xd9\xc2\x88\xe5?'
tRp101
sS'Mean_Concreteness'
p102
g38
(g40
S'{\x14\xaeG\xe1z\x1c@'
tRp103
sS'SD_Arousal'
p104
g38
(g40
S'\xach\xea\xf1\xb4\xa0\xfe?'
tRp105
stRp106
sS'_exp'
p107
I224344208
sg10
S'main_loop'
p108
sg6
S'C:\\Users\\ning\\Documents\\python_works\\uncon_semantic\\psychopy_scripts\\experiment.py'
p109
sS'thisRepN'
p110
I0
sg30
I01
sg31
g32
sS'data'
p111
g1
(cpsychopy.data
DataHandler
p112
g66
(dp113
g15
cnumpy.ma.core
_mareconstruct
p114
(cnumpy.ma.core
MaskedArray
p115
cnumpy
ndarray
p116
(I0
tp117
S'b'
tRp118
(I1
(I74
I1
tg39
(S'O4'
I0
I1
tRp119
(I3
S'|'
NNNI-1
I-1
I63
tbI00
S'\xb0\xdf\x9c\r\x80\xdf\x9c\r\xc8\xdf\x9c\r\x98\xdf\x9c\r\xe0\xdf\x9c\rh\xdf\x9c\r P\x9f\x12\xe0\x1e_\rPP\x9f\x12hP\x9f\x12\x80P\x9f\x12\x98P\x9f\x12\xb0P\x9f\x12\xc8P\x9f\x12\xe0P\x9f\x12\xf8P\x9f\x12\x10Q\x9f\x12(Q\x9f\x12@Q\x9f\x12XQ\x9f\x12pQ\x9f\x12\x88Q\x9f\x12\xa0Q\x9f\x12\xb8Q\x9f\x12\xd0Q\x9f\x12\xe8Q\x9f\x12\x00R\x9f\x12\x18R\x9f\x120R\x9f\x12HR\x9f\x12`@\x98\x12xR\x9f\x12\x90R\x9f\x12\xa8R\x9f\x12\xc0R\x9f\x12\xd8R\x9f\x12\xf0R\x9f\x12\xa0E\x98\x12 S\x9f\x128S\x9f\x12PS\x9f\x12hS\x9f\x12\x80S\x9f\x12 J\x98\x12\xb0S\x9f\x12\xc8S\x9f\x12\xe0S\x9f\x12\xf8S\x9f\x12\x10T\x9f\x12(T\x9f\x12@T\x9f\x12XT\x9f\x12pT\x9f\x12\x88T\x9f\x12\xa0T\x9f\x12\xb8T\x9f\x12\x00d\x98\x12\xe8T\x9f\x12\x00U\x9f\x12\x18U\x9f\x120U\x9f\x12HU\x9f\x12`U\x9f\x12xU\x9f\x12\x90U\x9f\x12\xa8U\x9f\x12\xc0U\x9f\x12\xd8U\x9f\x12\x00m\x98\x12\x08V\x9f\x12 V\x9f\x128V\x9f\x12PV\x9f\x12hV\x9f\x12'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg22
g114
(g115
g116
g117
S'b'
tRp120
(I1
(I74
I1
tg119
I00
S' p\xa0\x12@t\xa0\x12Xt\xa0\x12pt\xa0\x12\x88t\xa0\x12\xa0t\xa0\x12\xb8t\xa0\x12h?^\x02\xe8t\xa0\x12\x00u\xa0\x12\x18u\xa0\x120u\xa0\x12Hu\xa0\x12`u\xa0\x12xu\xa0\x12\x90u\xa0\x12\xa8u\xa0\x12\xc0u\xa0\x12\xd8u\xa0\x12\xf0u\xa0\x12\x08v\xa0\x12 v\xa0\x128v\xa0\x12Pv\xa0\x12hv\xa0\x12\x80v\xa0\x12\x98v\xa0\x12\xb0v\xa0\x12\xc8v\xa0\x12\xe0v\xa0\x12\x08\xe9`\x02\x10w\xa0\x12(w\xa0\x12@w\xa0\x12Xw\xa0\x12pw\xa0\x12\x88w\xa0\x12h?^\x02\xb8w\xa0\x12\xd0w\xa0\x12\xe8w\xa0\x12\x00x\xa0\x12\x18x\xa0\x12\xcc\x18\x1f\x1eHx\xa0\x12`x\xa0\x12xx\xa0\x12\x90x\xa0\x12\xa8x\xa0\x12\xc0x\xa0\x12\xd8x\xa0\x12\xf0x\xa0\x12\x08y\xa0\x12 y\xa0\x128y\xa0\x12Py\xa0\x12hy\xa0\x12\x80y\xa0\x12\x98y\xa0\x12\xb0y\xa0\x12\xc8y\xa0\x12\xe0y\xa0\x12\xf8y\xa0\x12\x10z\xa0\x12(z\xa0\x12@z\xa0\x12Xz\xa0\x12pz\xa0\x12\x08\xe9`\x02\xa0z\xa0\x12\xb8z\xa0\x12\xd0z\xa0\x12\xe8z\xa0\x12\x00{\xa0\x12'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'ran'
p121
g114
(g115
g116
g117
S'b'
tRp122
(I1
(I74
I1
tg39
(S'f4'
I0
I1
tRp123
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg27
g114
(g115
g116
g117
S'b'
tRp124
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg25
g114
(g115
g116
g117
S'b'
tRp125
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg16
g114
(g115
g116
g117
S'b'
tRp126
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Wz\xd2A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\xd8cA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j>\x86B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00%\xe0RB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xae\xe2\x9fB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdf\xeb\x1bB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg20
g114
(g115
g116
g117
S'b'
tRp127
(I1
(I74
I1
tg119
I00
S'@\x1d\xa0\x12 \x19\xa0\x12X\x1d\xa0\x12p\x1d\xa0\x12\x88\x1d\xa0\x12\xa0\x1d\xa0\x12\xb8\x1d\xa0\x12\x90r\x98\x12\xe8\x1d\xa0\x12\x00\x1e\xa0\x12\x18\x1e\xa0\x120\x1e\xa0\x12H\x1e\xa0\x12`\x1e\xa0\x12x\x1e\xa0\x12\x90\x1e\xa0\x12\xa8\x1e\xa0\x12\xc0\x1e\xa0\x12\xd8\x1e\xa0\x12\xf0\x1e\xa0\x12\x08\x1f\xa0\x12 \x1f\xa0\x128\x1f\xa0\x12P\x1f\xa0\x12h\x1f\xa0\x12\x80\x1f\xa0\x12\x98\x1f\xa0\x12\xb0\x1f\xa0\x12\xc8\x1f\xa0\x12\xe0\x1f\xa0\x12\xc0q\x98\x128p\xa0\x12Pp\xa0\x12hp\xa0\x12\x80p\xa0\x12\x98p\xa0\x12\xb0p\xa0\x12\xb0t\x98\x12\xe0p\xa0\x12\xf8p\xa0\x12\x10q\xa0\x12(q\xa0\x12@q\xa0\x12\x00t\x98\x12pq\xa0\x12\x88q\xa0\x12\xa0q\xa0\x12\xb8q\xa0\x12\xd0q\xa0\x12\xe8q\xa0\x12\x00r\xa0\x12\x18r\xa0\x120r\xa0\x12Hr\xa0\x12`r\xa0\x12xr\xa0\x12\x90r\xa0\x12\xa8r\xa0\x12\xc0r\xa0\x12\xd8r\xa0\x12\xf0r\xa0\x12\x08s\xa0\x12 s\xa0\x128s\xa0\x12Ps\xa0\x12hs\xa0\x12\x80s\xa0\x12\x98s\xa0\x12Ps\x98\x12\xc8s\xa0\x12\xe0s\xa0\x12\xf8s\xa0\x12\x10t\xa0\x12(t\xa0\x12'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g114
(g115
g116
g117
S'b'
tRp128
(I1
(I74
I1
tg119
I00
S'H\x12\xa0\x12h\x16\xa0\x12\x80\x16\xa0\x12\x98\x16\xa0\x12\xb0\x16\xa0\x12\xc8\x16\xa0\x12\xe0\x16\xa0\x12\x80\xa2\xc6\x02\x10\x17\xa0\x12(\x17\xa0\x12@\x17\xa0\x12X\x17\xa0\x12p\x17\xa0\x12\x88\x17\xa0\x12\xa0\x17\xa0\x12\xb8\x17\xa0\x12\xd0\x17\xa0\x12\xe8\x17\xa0\x12\x00\x18\xa0\x12\x18\x18\xa0\x120\x18\xa0\x12H\x18\xa0\x12`\x18\xa0\x12x\x18\xa0\x12\x90\x18\xa0\x12\xa8\x18\xa0\x12\xc0\x18\xa0\x12\xd8\x18\xa0\x12\xf0\x18\xa0\x12\x08\x19\xa0\x12\xa0\xa2\xc6\x028\x19\xa0\x12P\x19\xa0\x12h\x19\xa0\x12\x80\x19\xa0\x12\x98\x19\xa0\x12\xb0\x19\xa0\x12\xa0\xa2\xc6\x02\xe0\x19\xa0\x12\xf8\x19\xa0\x12\x10\x1a\xa0\x12(\x1a\xa0\x12@\x1a\xa0\x12\xa0\xa2\xc6\x02p\x1a\xa0\x12\x88\x1a\xa0\x12\xa0\x1a\xa0\x12\xb8\x1a\xa0\x12\xd0\x1a\xa0\x12\xe8\x1a\xa0\x12\x00\x1b\xa0\x12\x18\x1b\xa0\x120\x1b\xa0\x12H\x1b\xa0\x12`\x1b\xa0\x12x\x1b\xa0\x12\x90\x1b\xa0\x12\xa8\x1b\xa0\x12\xc0\x1b\xa0\x12\xd8\x1b\xa0\x12\xf0\x1b\xa0\x12\x08\x1c\xa0\x12 \x1c\xa0\x128\x1c\xa0\x12P\x1c\xa0\x12h\x1c\xa0\x12\x80\x1c\xa0\x12\x98\x1c\xa0\x12\xa0\xa2\xc6\x02\xc8\x1c\xa0\x12\xe0\x1c\xa0\x12\xf8\x1c\xa0\x12\x10\x1d\xa0\x12(\x1d\xa0\x12'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg24
g114
(g115
g116
g117
S'b'
tRp129
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9a\xd1\xf1A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05E\x8dA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1b\x14\x8dB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00u\x9c`B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00l\x97+B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg14
g114
(g115
g116
g117
S'b'
tRp130
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|F\xc9A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05 QA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfdO\x83B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00m\x9aMB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x17\x9dB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xed\xec\x16B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg23
g114
(g115
g116
g117
S'b'
tRp131
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.\xder?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\x1d\xf3>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x003\xb3\xed>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\xa4\xa8>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
NtbsS'order'
p132
g114
(g115
g116
g117
S'b'
tRp133
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg17
g114
(g115
g116
g117
S'b'
tRp134
(I1
(I74
I1
tg119
I00
S'\x98V\x9f\x12\x80_\x9f\x12h_\x9f\x12\x98_\x9f\x12\xb0_\x9f\x12\xc8_\x9f\x12\xe0_\x9f\x12\xb0\x18_\r8\x10\xa0\x12P\x10\xa0\x12h\x10\xa0\x12\x80\x10\xa0\x12\x98\x10\xa0\x12\xb0\x10\xa0\x12\xc8\x10\xa0\x12\xe0\x10\xa0\x12\xf8\x10\xa0\x12\x10\x11\xa0\x12(\x11\xa0\x12@\x11\xa0\x12X\x11\xa0\x12p\x11\xa0\x12\x88\x11\xa0\x12\xa0\x11\xa0\x12\xb8\x11\xa0\x12\xd0\x11\xa0\x12\xe8\x11\xa0\x12\x00\x12\xa0\x12\x18\x12\xa0\x120\x12\xa0\x12\x90\x18_\r`\x12\xa0\x12x\x12\xa0\x12\x90\x12\xa0\x12\xa8\x12\xa0\x12\xc0\x12\xa0\x12\xd8\x12\xa0\x12\xa0s\x98\x12\x08\x13\xa0\x12 \x13\xa0\x128\x13\xa0\x12P\x13\xa0\x12h\x13\xa0\x12@s\x98\x12\x98\x13\xa0\x12\xb0\x13\xa0\x12\xc8\x13\xa0\x12\xe0\x13\xa0\x12\xf8\x13\xa0\x12\x10\x14\xa0\x12(\x14\xa0\x12@\x14\xa0\x12X\x14\xa0\x12p\x14\xa0\x12\x88\x14\xa0\x12\xa0\x14\xa0\x12`t\x98\x12\xd0\x14\xa0\x12\xe8\x14\xa0\x12\x00\x15\xa0\x12\x18\x15\xa0\x120\x15\xa0\x12H\x15\xa0\x12`\x15\xa0\x12x\x15\xa0\x12\x90\x15\xa0\x12\xa8\x15\xa0\x12\xc0\x15\xa0\x12\xf0r\x98\x12\xf0\x15\xa0\x12\x08\x16\xa0\x12 \x16\xa0\x128\x16\xa0\x12P\x16\xa0\x12'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g114
(g115
g116
g117
S'b'
tRp135
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg29
g114
(g115
g116
g117
S'b'
tRp136
(I1
(I74
I1
tg119
I00
S'\xd0}\xa0\x12\x18\xa2\xa0\x120\xa2\xa0\x12H\xa2\xa0\x12`\xa2\xa0\x12x\xa2\xa0\x12\x90\xa2\xa0\x12\xd0q\x98\x12\xc0\xa2\xa0\x12\xd8\xa2\xa0\x12\xf0\xa2\xa0\x12\x08\xa3\xa0\x12 \xa3\xa0\x128\xa3\xa0\x12P\xa3\xa0\x12h\xa3\xa0\x12\x80\xa3\xa0\x12\x98\xa3\xa0\x12\xb0\xa3\xa0\x12\xc8\xa3\xa0\x12\xe0\xa3\xa0\x12\xf8\xa3\xa0\x12\x10\xa4\xa0\x12(\xa4\xa0\x12@\xa4\xa0\x12X\xa4\xa0\x12p\xa4\xa0\x12\x88\xa4\xa0\x12\xa0\xa4\xa0\x12\xb8\xa4\xa0\x12\xa0q\x98\x12\xe8\xa4\xa0\x12\x00\xa5\xa0\x12\x18\xa5\xa0\x120\xa5\xa0\x12H\xa5\xa0\x12`\xa5\xa0\x12\xf0s\x98\x12\x90\xa5\xa0\x12\xa8\xa5\xa0\x12\xc0\xa5\xa0\x12\xd8\xa5\xa0\x12\xf0\xa5\xa0\x12ps\x98\x12 \xa6\xa0\x128\xa6\xa0\x12P\xa6\xa0\x12h\xa6\xa0\x12\x80\xa6\xa0\x12\x98\xa6\xa0\x12\xb0\xa6\xa0\x12\xc8\xa6\xa0\x12\xe0\xa6\xa0\x12\xf8\xa6\xa0\x12\x10\xa7\xa0\x12(\xa7\xa0\x12@\xa7\xa0\x12X\xa7\xa0\x12p\xa7\xa0\x12\x88\xa7\xa0\x12\xa0\xa7\xa0\x12\xb8\xa7\xa0\x12\xd0\xa7\xa0\x12\xe8\xa7\xa0\x12\x00\xa8\xa0\x12\x18\xa8\xa0\x120\xa8\xa0\x12H\xa8\xa0\x12\xb0r\x98\x12x\xa8\xa0\x12\x90\xa8\xa0\x12\xa8\xa8\xa0\x12\xc0\xa8\xa0\x12\xd8\xa8\xa0\x12'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg26
g114
(g115
g116
g117
S'b'
tRp137
(I1
(I74
I1
tg119
I00
S'\xf8v\xa0\x12\x18{\xa0\x120{\xa0\x12H{\xa0\x12`{\xa0\x12x{\xa0\x12\x90{\xa0\x128\xe9`\x02\xc0{\xa0\x12\xd8{\xa0\x12\xf0{\xa0\x12\x08|\xa0\x12 |\xa0\x128|\xa0\x12P|\xa0\x12h|\xa0\x12\x80|\xa0\x12\x98|\xa0\x12\xb0|\xa0\x12\xc8|\xa0\x12\xe0|\xa0\x12\xf8|\xa0\x12\x10}\xa0\x12(}\xa0\x12@}\xa0\x12X}\xa0\x12p}\xa0\x12\x88}\xa0\x12\xa0}\xa0\x12\xb8}\xa0\x128\xe9`\x02\xe8}\xa0\x12\x00~\xa0\x12\x18~\xa0\x120~\xa0\x12H~\xa0\x12`~\xa0\x128\xe9`\x02\x90~\xa0\x12\xa8~\xa0\x12\xc0~\xa0\x12\xd8~\xa0\x12\xf0~\xa0\x12h?^\x02 \x7f\xa0\x128\x7f\xa0\x12P\x7f\xa0\x12h\x7f\xa0\x12\x80\x7f\xa0\x12\x98\x7f\xa0\x12\xb0\x7f\xa0\x12\xc8\x7f\xa0\x12\xe0\x7f\xa0\x12 \xa0\xa0\x128\xa0\xa0\x12P\xa0\xa0\x12h\xa0\xa0\x12\x80\xa0\xa0\x12\x98\xa0\xa0\x12\xb0\xa0\xa0\x12\xc8\xa0\xa0\x12\xe0\xa0\xa0\x12\xf8\xa0\xa0\x12\x10\xa1\xa0\x12(\xa1\xa0\x12@\xa1\xa0\x12X\xa1\xa0\x12p\xa1\xa0\x12\x08\xe9`\x02\xa0\xa1\xa0\x12\xb8\xa1\xa0\x12\xd0\xa1\xa0\x12\xe8\xa1\xa0\x12\x00\xa2\xa0\x12'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g114
(g115
g116
g117
S'b'
tRp138
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9b\xcf\xe5A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8@\x81A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc9\x13\x8aB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00m\x9bZB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcf\x96%B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
Ntbsg28
g114
(g115
g116
g117
S'b'
tRp139
(I1
(I74
I1
tg123
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Z\x94\xbb>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb0O\x15?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\xd8\xb3>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf9\x9d.?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.\x8b\xaa>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01'
NtbstRp140
(dp141
S'isNumeric'
p142
(dp143
g20
I00
sg15
I00
sg22
I00
sg14
I01
sg121
I01
sg24
I01
sg27
I01
sg25
I01
sg16
I01
sg18
I01
sg17
I00
sg21
I01
sg29
I00
sg26
I00
sg19
I00
sg23
I01
sg132
I01
sg28
I01
ssS'trials'
p144
g60
sS'dataTypes'
p145
(lp146
g121
ag132
ag14
ag15
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
ag24
ag25
ag26
ag27
ag28
ag29
asS'dataShape'
p147
(lp148
I74
aI1
asbsS'method'
p149
S'random'
p150
sS'sequenceIndices'
p151
cnumpy.core.multiarray
_reconstruct
p152
(g116
(I0
tS'b'
tRp153
(I1
(I74
I1
tg39
(S'i4'
I0
I1
tRp154
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x1e\x00\x00\x00\x07\x00\x00\x00D\x00\x00\x00+\x00\x00\x00%\x00\x00\x008\x00\x00\x00\x0f\x00\x00\x00\x18\x00\x00\x00\x12\x00\x00\x001\x00\x00\x00\x0e\x00\x00\x00 \x00\x00\x00?\x00\x00\x00\x10\x00\x00\x00(\x00\x00\x00-\x00\x00\x00)\x00\x00\x003\x00\x00\x00\x19\x00\x00\x00C\x00\x00\x00\'\x00\x00\x006\x00\x00\x00\x17\x00\x00\x00\x0c\x00\x00\x00\x1b\x00\x00\x00\x16\x00\x00\x00<\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x15\x00\x00\x00/\x00\x00\x00I\x00\x00\x00&\x00\x00\x00"\x00\x00\x00#\x00\x00\x00\r\x00\x00\x00@\x00\x00\x00\x04\x00\x00\x00\x14\x00\x00\x00*\x00\x00\x002\x00\x00\x00\x1c\x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00=\x00\x00\x00.\x00\x00\x009\x00\x00\x00\x08\x00\x00\x00:\x00\x00\x004\x00\x00\x00\n\x00\x00\x00F\x00\x00\x00\x1a\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00\x0b\x00\x00\x00>\x00\x00\x00;\x00\x00\x007\x00\x00\x00\x05\x00\x00\x00G\x00\x00\x00\x06\x00\x00\x00E\x00\x00\x000\x00\x00\x00\x1f\x00\x00\x00\x11\x00\x00\x00,\x00\x00\x00A\x00\x00\x00$\x00\x00\x005\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x00\x1d\x00\x00\x00'
tbsS'finished'
p155
I00
sS'nReps'
p156
I1
sS'nRemaining'
p157
I68
sS'trialList'
p158
(lp159
g1
(g65
g66
(dp160
g68
S'animal'
p161
sg70
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x11@'
tRp162
sg72
g38
(g40
S'\x1a\x01P\xfc\xcc6\xdb?'
tRp163
sg74
S'Abejorro'
p164
sg76
g38
(g40
S'\xd7P^Cy\r\x01@'
tRp165
sg78
g38
(g40
S'\xb42i\xd2cR\x03@'
tRp166
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp167
sg83
g85
sg86
S'Bumblebee'
p168
sg88
S'../stimuli_figure/Bumblebee.jpeg'
p169
sg90
g38
(g40
S'\x9dZ\x87\x9bg\x19\xf5?'
tRp170
sg92
S'Living_Things'
p171
sg94
g38
(g40
S'\x9bs\xfb\xe5"~\xf8?'
tRp172
sg96
g38
(g40
S'\x0e\xe55\x94\xd7P\x1c@'
tRp173
sg98
g38
(g40
S'\n\xd7\xa3p=\n\xc7?'
tRp174
sg100
g38
(g40
S'I1\xfey\xd0o\xfb\xbf'
tRp175
sg102
g38
(g40
S'\x14\xaeG\xe1z\x14\x1e@'
tRp176
sg104
g38
(g40
S';\xf5u\xf0\x8cU\xf9?'
tRp177
stRp178
ag1
(g65
g66
(dp179
g68
g161
sg70
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x10@'
tRp180
sg72
g38
(g40
S'E\x16q\xbc\x15j\xd6?'
tRp181
sg74
S'Almeja'
p182
sg76
g38
(g40
S'\xf4\x1a\xcak(\xaf\x13@'
tRp183
sg78
g38
(g40
S'\xd0\xe7"\xf6=\x15\x03@'
tRp184
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp185
sg83
g85
sg86
S'Clam'
p186
sg88
S'../stimuli_figure/Clam.jpeg'
p187
sg90
g38
(g40
S'\xfc\x8c\x01\xfc\xc3-\xfb?'
tRp188
sg92
g171
sg94
g38
(g40
S'\x18\xe0`Z\x8d\xfa\x04@'
tRp189
sg96
g38
(g40
S'\xe85\x94\xd7P^\x0b@'
tRp190
sg98
g38
(g40
S'H\xe1z\x14\xaeG\xe1?'
tRp191
sg100
g38
(g40
S'~\\\xa2\xfe\xcb\xb7\xe3\xbf'
tRp192
sg102
g38
(g40
S'\xe1z\x14\xaeG\xe1\x1a@'
tRp193
sg104
g38
(g40
S'\x8d\xd7\x8dmp\xfe\xfb?'
tRp194
stRp195
ag1
(g65
g66
(dp196
g68
g161
sg70
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\n@'
tRp197
sg72
g38
(g40
S'\xca\x03b}Y\xb4\xe2?'
tRp198
sg74
S'Asno'
p199
sg76
g38
(g40
S'6\x94\xd7P^C\x15@'
tRp200
sg78
g38
(g40
S'\xea\xf86\xc3Ko\x02@'
tRp201
sg80
g38
(g81
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp202
sg83
g85
sg86
S'Donkey'
p203
sg88
S'../stimuli_figure/Donkey.jpeg'
p204
sg90
g38
(g40
S'\x8b>\x8e\x13\xbc\x1b\xfb?'
tRp205
sg92
g171
sg94
g38
(g40
S'\xd4\xa4\xca\xaa\x05\x18\xff?'
tRp206
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x12@'
tRp207
sg98
g38
(g40
S'q=\n\xd7\xa3p\x0f@'
tRp208
sg100
g38
(g40
S'>\xd0bt\xf2\xe5\xf5?'
tRp209
sg102
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x1b@'
tRp210
sg104
g38
(g40
S'\x86\xe4\xb4hWn\xf9?'
tRp211
stRp212
ag1
(g65
g66
(dp213
g68
g161
sg70
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x0b@'
tRp214
sg72
g38
(g40
S'\xf2f\xdf"\xf0\x86\xdf?'
tRp215
sg74
S'Babosa'
p216
sg76
g38
(g40
S'\xd7P^Cy\r\x01@'
tRp217
sg78
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x01@'
tRp218
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp219
sg83
g85
sg86
S'Slug'
p220
sg88
S'../stimuli_figure/Slug.jpeg'
p221
sg90
g38
(g40
S'\xb04s\xe4\xb5l\xf5?'
tRp222
sg92
g171
sg94
g38
(g40
S'd\x98Y\xb8(\xbc\xfe?'
tRp223
sg96
g38
(g40
S'\x0c\xe55\x94\xd7P\x14@'
tRp224
sg98
g38
(g40
S'\n\xd7\xa3p=\n\xd7?'
tRp225
sg100
g38
(g40
S'R\x14\x81\xfa\xaeX\xf0\xbf'
tRp226
sg102
g38
(g40
S'\n\xd7\xa3p=\n\x1b@'
tRp227
sg104
g38
(g40
S'\xd0\x83Y3\xac<\x04@'
tRp228
stRp229
ag1
(g65
g66
(dp230
g68
g161
sg70
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x13@'
tRp231
sg72
g38
(g40
S'\xaf\xe7\xae4>\x89\xdd?'
tRp232
sg74
S'Ballena'
p233
sg76
g38
(g40
S'7\x98"\x9fu\x83\x19@'
tRp234
sg78
g38
(g40
S'\x1c\xe1\xf5:\x91\x15\x02@'
tRp235
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp236
sg83
g85
sg86
S'Whale'
p237
sg88
S'../stimuli_figure/Whale.jpeg'
p238
sg90
g38
(g40
S'\xda\xb3\x94\xcdt\xc7\xf5?'
tRp239
sg92
g171
sg94
g38
(g40
S'$8e\x90\x85a\xf6?'
tRp240
sg96
g38
(g40
S'\xad\x1bL\x91\xcf\xba\x11@'
tRp241
sg98
g38
(g40
S'R\xb8\x1e\x85\xebQ\x08@'
tRp242
sg100
g38
(g40
S'\xe2\x85(\x1b+\xca\xf1?'
tRp243
sg102
g38
(g40
S'\xd7\xa3p=\n\xd7\x1f@'
tRp244
sg104
g38
(g40
S'Q\xc4\xfeM\xder\xff?'
tRp245
stRp246
ag1
(g65
g66
(dp247
g68
g161
sg70
g38
(g40
S'\xd7\xa3p=\n\xd7\x0b@'
tRp248
sg72
g38
(g40
S'\xbc C\xf7sa\xd5?'
tRp249
sg74
S'Buitre'
p250
sg76
g38
(g40
S'\x94\xd7P^Cy\t@'
tRp251
sg78
g38
(g40
S'\xeb\xdb\x01[I%\x01@'
tRp252
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp253
sg83
g85
sg86
S'Vulture'
p254
sg88
S'../stimuli_figure/Vulture.jpeg'
p255
sg90
g38
(g40
S'p|\xda\x1c\xcb\xa9\xf4?'
tRp256
sg92
g171
sg94
g38
(g40
S'\xc2s\xd0o\x15,\x03@'
tRp257
sg96
g38
(g40
S'\xf5\x1a\xcak(\xaf\x15@'
tRp258
sg98
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x0c@'
tRp259
sg100
g38
(g40
S'\xff\x07\xff\xbdm\\\xf4?'
tRp260
sg102
g38
(g40
S'\xaeG\xe1z\x14\xae\x1b@'
tRp261
sg104
g38
(g40
S'\xf49H\x06\xa7\x92\xf5?'
tRp262
stRp263
ag1
(g65
g66
(dp264
g68
g161
sg70
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\x11@'
tRp265
sg72
g38
(g40
S'\x96QX\xd00\xa3\xe5?'
tRp266
sg74
S'Camello'
p267
sg76
g38
(g40
S'6\x94\xd7P^C\x17@'
tRp268
sg78
g38
(g40
S'\x19\xe0`Z\x8d\xfa\x04@'
tRp269
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp270
sg83
g85
sg86
S'Camel'
p271
sg88
S'../stimuli_figure/Camel.jpeg'
p272
sg90
g38
(g40
S'\xe3\xd8\x0fl\xf8\x10\xf8?'
tRp273
sg92
g171
sg94
g38
(g40
S'\xa8;1\x81z\xb2\xf4?'
tRp274
sg96
g38
(g40
S'\x94\xd7P^Cy\x13@'
tRp275
sg98
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x02@'
tRp276
sg100
g38
(g40
S'\x9c\xfd{N\x1e\xee\xea?'
tRp277
sg102
g38
(g40
S'=\n\xd7\xa3p=\x1e@'
tRp278
sg104
g38
(g40
S'\xd7\xc6>\\\xdc|\xfe?'
tRp279
stRp280
ag1
(g65
g66
(dp281
g68
g161
sg70
g38
(g40
S'\xaeG\xe1z\x14\xae\x0f@'
tRp282
sg72
g38
(g40
S'\x0b\xe4\xa2\x07\x9f5\xd4?'
tRp283
sg74
S'Canario'
p284
sg76
g38
(g40
S']Cy\r\xe55\x18@'
tRp285
sg78
g38
(g40
S'\xba\xcd\xe1\xa9\x16\xa9\x01@'
tRp286
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp287
sg83
g85
sg86
S'Canary'
p288
sg88
S'../stimuli_figure/Canary.jpeg'
p289
sg90
g38
(g40
S'\xb5\xb82\xcc<J\xfa?'
tRp290
sg92
g171
sg94
g38
(g40
S'\x16P\xda\xca^\x81\x00@'
tRp291
sg96
g38
(g40
S'\xe75\x94\xd7P^\x11@'
tRp292
sg98
g38
(g40
S')\\\x8f\xc2\xf5(\x16@'
tRp293
sg100
g38
(g40
S'\xcd\x14{XTd\xfb?'
tRp294
sg102
g38
(g40
S'\xc3\xf5(\\\x8f\xc2\x19@'
tRp295
sg104
g38
(g40
S'\x1a\x04\\{\x85>\x00@'
tRp296
stRp297
ag1
(g65
g66
(dp298
g68
g161
sg70
g38
(g40
S'\xc3\xf5(\\\x8f\xc2\x11@'
tRp299
sg72
g38
(g40
S'\x10%v\x7f\xa5m\xe0?'
tRp300
sg74
S'Canguro'
p301
sg76
g38
(g40
S'k(\xaf\xa1\xbc\x86\x18@'
tRp302
sg78
g38
(g40
S'<\x98\xee{8M\x05@'
tRp303
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp304
sg83
g85
sg86
S'Kangaroo'
p305
sg88
S'../stimuli_figure/Kangaroo.jpeg'
p306
sg90
g38
(g40
S'\x91\xc6\xb0\x18\xba\x1d\xf1?'
tRp307
sg92
g171
sg94
g38
(g40
S'\xf4X\xdc+\xd6\x9a\xfb?'
tRp308
sg96
g38
(g40
S'\xa2\xbc\x86\xf2\x1a\xca\x13@'
tRp309
sg98
g38
(g40
S'\n\xd7\xa3p=\n\xd7?'
tRp310
sg100
g38
(g40
S'R\x14\x81\xfa\xaeX\xf0\xbf'
tRp311
sg102
g38
(g40
S'\xb8\x1e\x85\xebQ\xb8\x1e@'
tRp312
sg104
g38
(g40
S'\x83\xd1\xa9\x14\x16\xfd\xff?'
tRp313
stRp314
ag1
(g65
g66
(dp315
g68
g161
sg70
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x14@'
tRp316
sg72
g38
(g40
S'\x9cd+s=\xdf\xe4?'
tRp317
sg74
S'Caracol'
p318
sg76
g38
(g40
S'^Cy\r\xe55\x14@'
tRp319
sg78
g38
(g40
S'\xab\x95#\xb07\xaa\xff?'
tRp320
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp321
sg83
g85
sg86
S'Snail'
p322
sg88
S'../stimuli_figure/Snail.jpeg'
p323
sg90
g38
(g40
S'\xc5\xbaZ\xd6@U\xff?'
tRp324
sg92
g171
sg94
g38
(g40
S'\x0c\x88\x11=\xf3\xc4\xf3?'
tRp325
sg96
g38
(g40
S'\xf1\x1a\xcak(\xaf\t@'
tRp326
sg98
g38
(g40
S'q=\n\xd7\xa3p\x15@'
tRp327
sg100
g38
(g40
S'GGBT\t\xdd\xfa?'
tRp328
sg102
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x1f@'
tRp329
sg104
g38
(g40
S'\x02\x92\xbc\xb2\xdf\xdb\x00@'
tRp330
stRp331
ag1
(g65
g66
(dp332
g68
g161
sg70
g38
(g40
S'\xa4p=\n\xd7\xa3\x10@'
tRp333
sg72
g38
(g40
S'\xd01H\xe6\x94\xb2\xe5?'
tRp334
sg74
S'Cebra'
p335
sg76
g38
(g40
S'y\r\xe55\x94\xd7\x16@'
tRp336
sg78
g38
(g40
S'|\x80V\x91e\xbf\x05@'
tRp337
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp338
sg83
g85
sg86
S'Zebra'
p339
sg88
S'../stimuli_figure/Zebra.jpeg'
p340
sg90
g38
(g40
S'4\x00\xc7\xc6\x164\xf7?'
tRp341
sg92
g171
sg94
g38
(g40
S'\xe7\x18\xf6\xe3\x02\x0e\x02@'
tRp342
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x14@'
tRp343
sg98
g38
(g40
S'{\x14\xaeG\xe1z\xec?'
tRp344
sg100
g38
(g40
S'\xd2\x87\xb2\x01)\xd5\xbd\xbf'
tRp345
sg102
g38
(g40
S'\x14\xaeG\xe1z\x14\x1e@'
tRp346
sg104
g38
(g40
S'\x1e\xe0\xd2\x9a\xa3\xb5\xfb?'
tRp347
stRp348
ag1
(g65
g66
(dp349
g68
g161
sg70
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\x11@'
tRp350
sg72
g38
(g40
S'\xa9\xe8\x9cIK)\xe5?'
tRp351
sg74
S'Chimpanc\xe9'
p352
sg76
g38
(g40
S'(\xaf\xa1\xbc\x86\xf2\x18@'
tRp353
sg78
g38
(g40
S'\x17\xfbR\x91\x06\x98\x04@'
tRp354
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp355
sg83
g85
sg86
S'Chimpanzee'
p356
sg88
S'../stimuli_figure/Chimpanzee.jpeg'
p357
sg90
g38
(g40
S'V\xa3\xd7\xfb\xed{\xf3?'
tRp358
sg92
g171
sg94
g38
(g40
S'_\x87X\xc9\xa0\xb0\xfd?'
tRp359
sg96
g38
(g40
S'By\r\xe55\x94\x17@'
tRp360
sg98
g38
(g40
S'H\xe1z\x14\xaeG\x13@'
tRp361
sg100
g38
(g40
S'\x9bz\x90\xfe\x14*\xf9?'
tRp362
sg102
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x1f@'
tRp363
sg104
g38
(g40
S'\xba[]\xd9\n+\xf7?'
tRp364
stRp365
ag1
(g65
g66
(dp366
g68
g161
sg70
g38
(g40
S'\xecQ\xb8\x1e\x85\xeb\t@'
tRp367
sg72
g38
(g40
S'\xd6\xc2\xc9\x83G\xd2\xd6?'
tRp368
sg74
S'Ciervo'
p369
sg76
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x1a@'
tRp370
sg78
g38
(g40
S'aMp\x9d\x0e\x14\x02@'
tRp371
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp372
sg83
g85
sg86
S'Deer'
p373
sg88
S'../stimuli_figure/Deer.jpeg'
p374
sg90
g38
(g40
S'UKJ4 <\xf3?'
tRp375
sg92
g171
sg94
g38
(g40
S'\xba\xa1A\\\x12\xe8\xff?'
tRp376
sg96
g38
(g40
S'\x94\xd7P^Cy\x13@'
tRp377
sg98
g38
(g40
S'\xa4p=\n\xd7\xa3\xfc?'
tRp378
sg100
g38
(g40
S'\x15\x9a\xcf\xa6\x82\xa1\xe2?'
tRp379
sg102
g38
(g40
S'H\xe1z\x14\xaeG\x1d@'
tRp380
sg104
g38
(g40
S'\x9f"I\xa8l\xa1\xfb?'
tRp381
stRp382
ag1
(g65
g66
(dp383
g68
g161
sg70
g38
(g40
S'\x14\xaeG\xe1z\x14\x12@'
tRp384
sg72
g38
(g40
S'\xa1\xe0@\x86\xfcK\xe3?'
tRp385
sg74
S'Cocodrilo'
p386
sg76
g38
(g40
S'l(\xaf\xa1\xbc\x86\x12@'
tRp387
sg78
g38
(g40
S'\xc9\xa2\xa8\xb1\xe0\xab\x04@'
tRp388
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp389
sg83
g85
sg86
S'Crocodile'
p390
sg88
S'../stimuli_figure/Crocodile.jpeg'
p391
sg90
g38
(g40
S'\xd4\xb7\x97\x8b\x80\xfe\xfe?'
tRp392
sg92
g171
sg94
g38
(g40
S'\xf1\x8a\xd1\x9e\xc8=\xf7?'
tRp393
sg96
g38
(g40
S'\xbe\x86\xf2\x1a\xcak\x1a@'
tRp394
sg98
g38
(g40
S'\xaeG\xe1z\x14\xae\t@'
tRp395
sg100
g38
(g40
S'"\xcc\xd4\xb6\x0b\xa9\xf2?'
tRp396
sg102
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x1f@'
tRp397
sg104
g38
(g40
S'P\x12S\xbc\x85.\xfd?'
tRp398
stRp399
ag1
(g65
g66
(dp400
g68
g161
sg70
g38
(g40
S'\n\xd7\xa3p=\n\x0f@'
tRp401
sg72
g38
(g40
S'\x006\xcb\xf4\xf5M\xe2?'
tRp402
sg74
S'Culebra'
p403
sg76
g38
(g40
S'\xd7P^Cy\r\xfd?'
tRp404
sg78
g38
(g40
S'%Z\xb6\x81\x9d\xce\x02@'
tRp405
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp406
sg83
g85
sg86
S'Snake'
p407
sg88
S'../stimuli_figure/Snake.jpeg'
p408
sg90
g38
(g40
S'\x1a\xc7\xae\xdfC\xea\xf2?'
tRp409
sg92
g171
sg94
g38
(g40
S'\xc5\xd9s5\xad\xc0\xf8?'
tRp410
sg96
g38
(g40
S'\x0e\xe55\x94\xd7P\x1e@'
tRp411
sg98
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x02@'
tRp412
sg100
g38
(g40
S'\x9c\xfd{N\x1e\xee\xea?'
tRp413
sg102
g38
(g40
S'H\xe1z\x14\xaeG\x1d@'
tRp414
sg104
g38
(g40
S'>\xde\xdd\xa0X\x92\xf8?'
tRp415
stRp416
ag1
(g65
g66
(dp417
g68
g161
sg70
g38
(g40
S'\xe1z\x14\xaeG\xe1\n@'
tRp418
sg72
g38
(g40
S'\xac\xb6K\xc4\x9d\x90\xd9?'
tRp419
sg74
S'Escarabajo'
p420
sg76
g38
(g40
S'(\xaf\xa1\xbc\x86\xf2\n@'
tRp421
sg78
g38
(g40
S'\xcd\xcc\xcc\xcc\xcc\xcc\xfc?'
tRp422
sg80
g38
(g81
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp423
sg83
g85
sg86
S'Beetle'
p424
sg88
S'../stimuli_figure/Beetle.jpeg'
p425
sg90
g38
(g40
S'\xa7l\xe3A\xe2\xee\xfa?'
tRp426
sg92
g171
sg94
g38
(g40
S'\x9bs\xfb\xe5"~\xf8?'
tRp427
sg96
g38
(g40
S'^Cy\r\xe55\x12@'
tRp428
sg98
g38
(g40
S'\xe1z\x14\xaeG\xe1\xf6?'
tRp429
sg100
g38
(g40
S'\x8d\xcb0Z#\xe4\xd6?'
tRp430
sg102
g38
(g40
S'\x14\xaeG\xe1z\x14\x1e@'
tRp431
sg104
g38
(g40
S'\xca\x03A77J\x02@'
tRp432
stRp433
ag1
(g65
g66
(dp434
g68
g161
sg70
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x12@'
tRp435
sg72
g38
(g40
S'UKU9u\xad\xe4?'
tRp436
sg74
S'Gallina'
p437
sg76
g38
(g40
S'\x0c\xe55\x94\xd7P\x12@'
tRp438
sg78
g38
(g40
S'MMP\x0fA\x06\x05@'
tRp439
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp440
sg83
g85
sg86
S'Hen'
p441
sg88
S'../stimuli_figure/Hen.jpeg'
p442
sg90
g38
(g40
S'1 \x1d\xf4\xd6\x8d\xf3?'
tRp443
sg92
g171
sg94
g38
(g40
S'\xfd\x07.\xc8\x86\x9b\x02@'
tRp444
sg96
g38
(g40
S'\xbd\x86\xf2\x1a\xcak\x12@'
tRp445
sg98
g38
(g40
S'\x14\xaeG\xe1z\x14*@'
tRp446
sg100
g38
(g40
S'>\xac\xc4\xe2N\x8b\x04@'
tRp447
sg102
g38
(g40
S'\xaeG\xe1z\x14\xae\x1b@'
tRp448
sg104
g38
(g40
S'\xe1\x1bp\x82\x01\xa6\xf9?'
tRp449
stRp450
ag1
(g65
g66
(dp451
g68
g161
sg70
g38
(g40
S'q=\n\xd7\xa3p\x11@'
tRp452
sg72
g38
(g40
S'\xd4s\xe5\xd0\xe5E\xe4?'
tRp453
sg74
S'Gaviota'
p454
sg76
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x14@'
tRp455
sg78
g38
(g40
S'\xdb\xd5\xd8\n\x0f\x9a\x02@'
tRp456
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp457
sg83
g85
sg86
S'Seagull'
p458
sg88
S'../stimuli_figure/Seagull.jpeg'
p459
sg90
g38
(g40
S'\xf9\x1e=\xdbu\xc8\xff?'
tRp460
sg92
g171
sg94
g38
(g40
S'$\x86\\\xb3\xb3\xd6\xf8?'
tRp461
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x14@'
tRp462
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x04@'
tRp463
sg100
g38
(g40
S'y\xe0\xe0\xf0@R\xed?'
tRp464
sg102
g38
(g40
S'\xaeG\xe1z\x14\xae\x1f@'
tRp465
sg104
g38
(g40
S'J\xb1\xea\xef\xee\xc8\xfe?'
tRp466
stRp467
ag1
(g65
g66
(dp468
g68
g161
sg70
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x08@'
tRp469
sg72
g38
(g40
S'z\x1e\xa5\x9d[\x1a\xe6?'
tRp470
sg74
S'Golondrina'
p471
sg76
g38
(g40
S'6\x94\xd7P^C\x19@'
tRp472
sg78
g38
(g40
S'\x94\xa1\x14\xfeH\x8b\x00@'
tRp473
sg80
g38
(g81
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp474
sg83
g85
sg86
S'Swallow'
p475
sg88
S'../stimuli_figure/Swallow.jpeg'
p476
sg90
g38
(g40
S'a\xcf\xf2\x04\xe1\x13\xf5?'
tRp477
sg92
g171
sg94
g38
(g40
S"\xf9\xb1\xeb'\xdfy\xf6?"
tRp478
sg96
g38
(g40
S'\xe75\x94\xd7P^\x11@'
tRp479
sg98
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x02@'
tRp480
sg100
g38
(g40
S'\x9c\xfd{N\x1e\xee\xea?'
tRp481
sg102
g38
(g40
S'\xa4p=\n\xd7\xa3\x1c@'
tRp482
sg104
g38
(g40
S'\xe7a\x8d\t\x1d[\xfd?'
tRp483
stRp484
ag1
(g65
g66
(dp485
g68
g161
sg70
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\n@'
tRp486
sg72
g38
(g40
S'L[\xfa;\xd5O\xe4?'
tRp487
sg74
S'Gorri\xf3n'
p488
sg76
g38
(g40
S'y\r\xe55\x94\xd7\x16@'
tRp489
sg78
g38
(g40
S'\x18KL\x0e\x1f\xd4\x03@'
tRp490
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp491
sg83
g85
sg86
S'Sparrow'
p492
sg88
S'../stimuli_figure/Sparrow.jpeg'
p493
sg90
g38
(g40
S'r"Bl}J\xf6?'
tRp494
sg92
g171
sg94
g38
(g40
S'\x1c\xd5?\xf3K\xd3\x00@'
tRp495
sg96
g38
(g40
S'\x94\xd7P^Cy\x11@'
tRp496
sg98
g38
(g40
S'{\x14\xaeG\xe1z\xec?'
tRp497
sg100
g38
(g40
S'\xd2\x87\xb2\x01)\xd5\xbd\xbf'
tRp498
sg102
g38
(g40
S'=\n\xd7\xa3p=\x1e@'
tRp499
sg104
g38
(g40
S'\xd1%Aq*Q\xfe?'
tRp500
stRp501
ag1
(g65
g66
(dp502
g68
g161
sg70
g38
(g40
S'\xd7\xa3p=\n\xd7\x0b@'
tRp503
sg72
g38
(g40
S'\x80\x98\xe4\xbf\x1f\x11\xe4?'
tRp504
sg74
S'Leopardo'
p505
sg76
g38
(g40
S'\x0e\xe55\x94\xd7P\x18@'
tRp506
sg78
g38
(g40
S'r\x1e:Mp\x06\xff?'
tRp507
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp508
sg83
g85
sg86
S'Leopard'
p509
sg88
S'../stimuli_figure/Leopard.jpeg'
p510
sg90
g38
(g40
S'\x86\xf7\xe5\xe4\xdf\xc2\xfe?'
tRp511
sg92
g171
sg94
g38
(g40
S'\xf8/N\xb8\xb7b\xf4?'
tRp512
sg96
g38
(g40
S'\x87\xf2\x1a\xcak(\x19@'
tRp513
sg98
g38
(g40
S'H\xe1z\x14\xaeG\xe1?'
tRp514
sg100
g38
(g40
S'~\\\xa2\xfe\xcb\xb7\xe3\xbf'
tRp515
sg102
g38
(g40
S'\xd7\xa3p=\n\xd7\x1f@'
tRp516
sg104
g38
(g40
S'\xbao\x9f\xf1\x1f\x81\xfd?'
tRp517
stRp518
ag1
(g65
g66
(dp519
g68
g161
sg70
g38
(g40
S'\xa4p=\n\xd7\xa3\x10@'
tRp520
sg72
g38
(g40
S'\xac\x0f\xa03s\xc3\xdd?'
tRp521
sg74
S'Liebre'
p522
sg76
g38
(g40
S'\xbe\x86\xf2\x1a\xcak\x16@'
tRp523
sg78
g38
(g40
S'\xe9\n\xbe-=\xd7\x01@'
tRp524
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp525
sg83
g85
sg86
S'Hare'
p526
sg88
S'../stimuli_figure/Hare.jpeg'
p527
sg90
g38
(g40
S'L\xaa\x87X}\x85\xf3?'
tRp528
sg92
g171
sg94
g38
(g40
S'`\x08!U\x9aI\xfe?'
tRp529
sg96
g38
(g40
S'\xcak(\xaf\xa1\xbc\x12@'
tRp530
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x14@'
tRp531
sg100
g38
(g40
S'4\x8d\xed\xf7A\xc0\xf9?'
tRp532
sg102
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x1d@'
tRp533
sg104
g38
(g40
S'\xcb\xd9\xb2W\xe8\x03\xfe?'
tRp534
stRp535
ag1
(g65
g66
(dp536
g68
g161
sg70
g38
(g40
S'\xcd\xcc\xcc\xcc\xcc\xcc\x0c@'
tRp537
sg72
g38
(g40
S'\x92,\x82\xaa\xaa[\xdc?'
tRp538
sg74
S'Lince'
p539
sg76
g38
(g40
S'By\r\xe55\x94\x1b@'
tRp540
sg78
g38
(g40
S'\xf9Md4\x83o\x01@'
tRp541
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp542
sg83
g85
sg86
S'Lynx'
p543
sg88
S'../stimuli_figure/Lynx.jpeg'
p544
sg90
g38
(g40
S'\x01\xf1\x06\xac\x12M\xf5?'
tRp545
sg92
g171
sg94
g38
(g40
S'\x1d\xbeP\x82\xb6\x03\x01@'
tRp546
sg96
g38
(g40
S'\x1b\xcak(\xaf\xa1\x1a@'
tRp547
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\xf4?'
tRp548
sg100
g38
(g40
S'!\x9a\x9a\xc7\xf7\x8f\xcc?'
tRp549
sg102
g38
(g40
S'\n\xd7\xa3p=\n\x1b@'
tRp550
sg104
g38
(g40
S'+\xe5\x10H+\xa8\xfb?'
tRp551
stRp552
ag1
(g65
g66
(dp553
g68
g161
sg70
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x11@'
tRp554
sg72
g38
(g40
S'Ol? \x9e \xd5?'
tRp555
sg74
S'Lobo'
p556
sg76
g38
(g40
S'6\x94\xd7P^C\x13@'
tRp557
sg78
g38
(g40
S'\xb42i\xd2cR\x03@'
tRp558
sg80
g38
(g81
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp559
sg83
g85
sg86
S'Wolf'
p560
sg88
S'../stimuli_figure/Wolf.jpeg'
p561
sg90
g38
(g40
S'\xb4\xb5\xdeg\x00\xdd\x02@'
tRp562
sg92
g171
sg94
g38
(g40
S'\x90u\x1cc\xfb]\xfc?'
tRp563
sg96
g38
(g40
S'6\x94\xd7P^C\x1b@'
tRp564
sg98
g38
(g40
S'\\\x8f\xc2\xf5(\\.@'
tRp565
sg100
g38
(g40
S'\x12Q\xfb:\x84\xc2\x05@'
tRp566
sg102
g38
(g40
S'\xb8\x1e\x85\xebQ\xb8\x1e@'
tRp567
sg104
g38
(g40
S'\xba\xb4pw&\xcd\xfb?'
tRp568
stRp569
ag1
(g65
g66
(dp570
g68
g161
sg70
g38
(g40
S'q=\n\xd7\xa3p\x11@'
tRp571
sg72
g38
(g40
S'\x84\x96\x8ah\xf3P\xe0?'
tRp572
sg74
S'Mejill\xf3n'
p573
sg76
g38
(g40
S'\xe55\x94\xd7P^\x15@'
tRp574
sg78
g38
(g40
S'r\xdf\xfb\r\x9e\xbe\x02@'
tRp575
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp576
sg83
g85
sg86
S'Mussel'
p577
sg88
S'../stimuli_figure/Mussel.jpeg'
p578
sg90
g38
(g40
S'\x1d\x8fxn/\xa3\xfa?'
tRp579
sg92
g171
sg94
g38
(g40
S'?\xfb?O-o\xfb?'
tRp580
sg96
g38
(g40
S'\x1b\xcak(\xaf\xa1\x0c@'
tRp581
sg98
g38
(g40
S'\xaeG\xe1z\x14\xae\t@'
tRp582
sg100
g38
(g40
S'"\xcc\xd4\xb6\x0b\xa9\xf2?'
tRp583
sg102
g38
(g40
S'\n\xd7\xa3p=\n\x1f@'
tRp584
sg104
g38
(g40
S'M\xcd,\r\x00\x99\x00@'
tRp585
stRp586
ag1
(g65
g66
(dp587
g68
g161
sg70
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x10@'
tRp588
sg72
g38
(g40
S'\x98\xe0\x94\xb0\x8d\x97\xdf?'
tRp589
sg74
S'Mono'
p590
sg76
g38
(g40
S'\xe55\x94\xd7P^\x19@'
tRp591
sg78
g38
(g40
S'\x1c\x8aj\xe4#\xee\x01@'
tRp592
sg80
g38
(g81
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp593
sg83
g85
sg86
S'Monkey'
p594
sg88
S'../stimuli_figure/Monkey.jpeg'
p595
sg90
g38
(g40
S'\xfa;\x0c\x07]`\xfa?'
tRp596
sg92
g171
sg94
g38
(g40
S'2\x94\x930\xc1\xbd\xfa?'
tRp597
sg96
g38
(g40
S'\xcak(\xaf\xa1\xbc\x16@'
tRp598
sg98
g38
(g40
S'\xf6(\\\x8f\xc252@'
tRp599
sg100
g38
(g40
S'\xe2p\x14\x84<7\x07@'
tRp600
sg102
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\x19@'
tRp601
sg104
g38
(g40
S'l\xd2\xeb\x9e\x0eU\x00@'
tRp602
stRp603
ag1
(g65
g66
(dp604
g68
g161
sg70
g38
(g40
S'H\xe1z\x14\xaeG\t@'
tRp605
sg72
g38
(g40
S'\xc12\xd4X^\x83\xe5?'
tRp606
sg74
S'Orangut\xe1n'
p607
sg76
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x16@'
tRp608
sg78
g38
(g40
S'\\d\xd09\xf7b\x01@'
tRp609
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp610
sg83
g85
sg86
S'Orangutan'
p611
sg88
S'../stimuli_figure/Orangutan.jpeg'
p612
sg90
g38
(g40
S'\x0cA\x91\x9d\x16J\xff?'
tRp613
sg92
g171
sg94
g38
(g40
S'=,\x0cp\xbd \xfa?'
tRp614
sg96
g38
(g40
S'Q^Cy\r\xe5\x17@'
tRp615
sg98
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\xf1?'
tRp616
sg100
g38
(g40
S'\x80\x91|\xc2\x13R\xb1?'
tRp617
sg102
g38
(g40
S'\x00\x00\x00\x00\x00\x00 @'
tRp618
sg104
g38
(g40
S'\r\xcf\xa1\x16\xb1s\xff?'
tRp619
stRp620
ag1
(g65
g66
(dp621
g68
g161
sg70
g38
(g40
S'\xe1z\x14\xaeG\xe1\x12@'
tRp622
sg72
g38
(g40
S'\x13\xd8\x14\x94\xf7Q\xdf?'
tRp623
sg74
S'Oso'
p624
sg76
g38
(g40
S'\xbe\x86\xf2\x1a\xcak\x16@'
tRp625
sg78
g38
(g40
S'\x1d\x7f\x80\xf1,{\x05@'
tRp626
sg80
g38
(g81
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp627
sg83
g85
sg86
S'Bear'
p628
sg88
S'../stimuli_figure/Bear.jpeg'
p629
sg90
g38
(g40
S'y\xce\xa00 \xb4\xfc?'
tRp630
sg92
g171
sg94
g38
(g40
S'\xf6\xc9\x1e 8\x7f\xf7?'
tRp631
sg96
g38
(g40
S'(\xaf\xa1\xbc\x86\xf2\x14@'
tRp632
sg98
g38
(g40
S'\\\x8f\xc2\xf5(\xdc&@'
tRp633
sg100
g38
(g40
S'd\xb5\x02,l}\x03@'
tRp634
sg102
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x1e@'
tRp635
sg104
g38
(g40
S'p`\xbe7\xbb\x93\x00@'
tRp636
stRp637
ag1
(g65
g66
(dp638
g68
g161
sg70
g38
(g40
S'q=\n\xd7\xa3p\r@'
tRp639
sg72
g38
(g40
S'\x84g"p\x91[\xe1?'
tRp640
sg74
S'Oveja'
p641
sg76
g38
(g40
S'\x1b\xcak(\xaf\xa1\x16@'
tRp642
sg78
g38
(g40
S'H\xe4\xee\xccT\x15\x01@'
tRp643
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp644
sg83
g85
sg86
S'Sheep'
p645
sg88
S'../stimuli_figure/Sheep.jpeg'
p646
sg90
g38
(g40
S'v\t\x94\xf3gu\xf5?'
tRp647
sg92
g171
sg94
g38
(g40
S'\xb4\x85\xea\x08o\xf6\xf3?'
tRp648
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x10@'
tRp649
sg98
g38
(g40
S'q=\n\xd7\xa3p\x1a@'
tRp650
sg100
g38
(g40
S'O\xabQ~\xa37\xfe?'
tRp651
sg102
g38
(g40
S'\\\x8f\xc2\xf5(\\\x1f@'
tRp652
sg104
g38
(g40
S'\xed\xe5\xfb\xe3\xcf\xab\xff?'
tRp653
stRp654
ag1
(g65
g66
(dp655
g68
g161
sg70
g38
(g40
S'\n\xd7\xa3p=\n\x13@'
tRp656
sg72
g38
(g40
S'\xcb\xfd$\n\x04\xcd\xdf?'
tRp657
sg74
S'Pato'
p658
sg76
g38
(g40
S'(\xaf\xa1\xbc\x86\xf2\x18@'
tRp659
sg78
g38
(g40
S"G'q\t\x8bs\x05@"
tRp660
sg80
g38
(g81
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp661
sg83
g85
sg86
S'Duck'
p662
sg88
S'../stimuli_figure/Duck.jpeg'
p663
sg90
g38
(g40
S'\x82\xcb\xe6\xb7\x93\x85\xf4?'
tRp664
sg92
g171
sg94
g38
(g40
S'=,\x0cp\xbd \xfa?'
tRp665
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x0e@'
tRp666
sg98
g38
(g40
S'H\xe1z\x14\xaeG\x13@'
tRp667
sg100
g38
(g40
S'\x9bz\x90\xfe\x14*\xf9?'
tRp668
sg102
g38
(g40
S'333333\x1f@'
tRp669
sg104
g38
(g40
S'6A\xb0:\xefQ\xfe?'
tRp670
stRp671
ag1
(g65
g66
(dp672
g68
g161
sg70
g38
(g40
S'\xb8\x1e\x85\xebQ\xb8\x12@'
tRp673
sg72
g38
(g40
S'A\xb3\x13\xed\x01\xad\xd4?'
tRp674
sg74
S'Perdiz'
p675
sg76
g38
(g40
S'6\x94\xd7P^C\x15@'
tRp676
sg78
g38
(g40
S'5\x88\xb5m\x84\x18\x04@'
tRp677
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp678
sg83
g85
sg86
S'Partridge'
p679
sg88
S'../stimuli_figure/Partridge.jpeg'
p680
sg90
g38
(g40
S'\xc4\x8d}\xb0\x15\xda\xfa?'
tRp681
sg92
g171
sg94
g38
(g40
S'\x914\x8a\xcb\xe9\xa7\xf4?'
tRp682
sg96
g38
(g40
S'Dy\r\xe55\x94\x0f@'
tRp683
sg98
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\xf1?'
tRp684
sg100
g38
(g40
S'\x80\x91|\xc2\x13R\xb1?'
tRp685
sg102
g38
(g40
S'\x00\x00\x00\x00\x00\x00 @'
tRp686
sg104
g38
(g40
S'I0\x13\xc6\xdao\xfe?'
tRp687
stRp688
ag1
(g65
g66
(dp689
g68
g161
sg70
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x10@'
tRp690
sg72
g38
(g40
S'$\xe6\xf5q\xe3.\xe3?'
tRp691
sg74
S'Ping\xfcino'
p692
sg76
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1c@'
tRp693
sg78
g38
(g40
S'\xe4g\x9d\n\xa0j\x05@'
tRp694
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp695
sg83
g85
sg86
S'Penguin'
p696
sg88
S'../stimuli_figure/Penguin.jpeg'
p697
sg90
g38
(g40
S'q\x85Y\x16\x9d\x1b\xf8?'
tRp698
sg92
g171
sg94
g38
(g40
S'\xa5\xd0\xbc\x14{h\x00@'
tRp699
sg96
g38
(g40
S'\xa2\xbc\x86\xf2\x1a\xca\x13@'
tRp700
sg98
g38
(g40
S'\\\x8f\xc2\xf5(\\\xff?'
tRp701
sg100
g38
(g40
S'\x8f4\x13\xd9\xc2\x88\xe5?'
tRp702
sg102
g38
(g40
S')\\\x8f\xc2\xf5(\x1c@'
tRp703
sg104
g38
(g40
S':\x04\x11\xb8\x058\x02@'
tRp704
stRp705
ag1
(g65
g66
(dp706
g68
g161
sg70
g38
(g40
S'\x14\xaeG\xe1z\x14\x0e@'
tRp707
sg72
g38
(g40
S'3ZC\xa46\xd3\xdc?'
tRp708
sg74
S'Pulga'
p709
sg76
g38
(g40
S'\x0c\xe55\x94\xd7P\x02@'
tRp710
sg78
g38
(g40
S'uv\x0e\xc1h\x7f\x03@'
tRp711
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp712
sg83
g85
sg86
S'Flea'
p713
sg88
S'../stimuli_figure/Flea.jpeg'
p714
sg90
g38
(g40
S'\xe2\xe6\xdf\x93M\xae\xf4?'
tRp715
sg92
g171
sg94
g38
(g40
S'E;\xd7A\xe3k\xff?'
tRp716
sg96
g38
(g40
S'k(\xaf\xa1\xbc\x86\x16@'
tRp717
sg98
g38
(g40
S'\xa4p=\n\xd7\xa3\xfc?'
tRp718
sg100
g38
(g40
S'\x15\x9a\xcf\xa6\x82\xa1\xe2?'
tRp719
sg102
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x1c@'
tRp720
sg104
g38
(g40
S'\n\xfcP\x9c\xbf0\x01@'
tRp721
stRp722
ag1
(g65
g66
(dp723
g68
g161
sg70
g38
(g40
S'\x14\xaeG\xe1z\x14\x0e@'
tRp724
sg72
g38
(g40
S'\xd0\xfc\x1a\xf6H\x86\xd8?'
tRp725
sg74
S'Tigre'
p726
sg76
g38
(g40
S'Q^Cy\r\xe5\x17@'
tRp727
sg78
g38
(g40
S'\xde\xac\xe4e\x8c\t\x04@'
tRp728
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp729
sg83
g85
sg86
S'Tiger'
p730
sg88
S'../stimuli_figure/Tiger.jpeg'
p731
sg90
g38
(g40
S'\x0e\x89\xb1\xd8\xf1(\x00@'
tRp732
sg92
g171
sg94
g38
(g40
S'\xa7S\x10\xbc#\x93\xfd?'
tRp733
sg96
g38
(g40
S"'\xaf\xa1\xbc\x86\xf2\x1c@"
tRp734
sg98
g38
(g40
S')\\\x8f\xc2\xf5(\x11@'
tRp735
sg100
g38
(g40
S'\xee59Q\xf3L\xf7?'
tRp736
sg102
g38
(g40
S'ffffff\x1e@'
tRp737
sg104
g38
(g40
S'4\xfeS_\xa2d\xfd?'
tRp738
stRp739
ag1
(g65
g66
(dp740
g68
g161
sg70
g38
(g40
S'\n\xd7\xa3p=\n\x13@'
tRp741
sg72
g38
(g40
S'\xddW\x84c\xf8\x8c\xe0?'
tRp742
sg74
S'Toro'
p743
sg76
g38
(g40
S'\xe85\x94\xd7P^\x0b@'
tRp744
sg78
g38
(g40
S'\xe4\x17Jw\x0c\xd2\x04@'
tRp745
sg80
g38
(g81
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp746
sg83
g85
sg86
S'Bull'
p747
sg88
S'../stimuli_figure/Bull.jpeg'
p748
sg90
g38
(g40
S']\xe2\x0f,\x86\n\xff?'
tRp749
sg92
g171
sg94
g38
(g40
S'M\xf3.(C\xbc\xf8?'
tRp750
sg96
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1c@'
tRp751
sg98
g38
(g40
S'\xecQ\xb8\x1e\x85k*@'
tRp752
sg100
g38
(g40
S'kj7\xc2\xd5\xa5\x04@'
tRp753
sg102
g38
(g40
S'\\\x8f\xc2\xf5(\\\x1f@'
tRp754
sg104
g38
(g40
S':/ww\x81T\xfc?'
tRp755
stRp756
ag1
(g65
g66
(dp757
g68
g161
sg70
g38
(g40
S'\xaa\xaa\xaa\xaa\xaa\xaa\t@'
tRp758
sg72
g38
(g40
S'!\x8d\\|U\xd3\xd8?'
tRp759
sg74
S'Zorro'
p760
sg76
g38
(g40
S'k(\xaf\xa1\xbc\x86\x16@'
tRp761
sg78
g38
(g40
S'C\xa9\xc0\xe4\x7f\xa6\x01@'
tRp762
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp763
sg83
g85
sg86
S'Fox'
p764
sg88
S'../stimuli_figure/Fox.jpeg'
p765
sg90
g38
(g40
S'\xb5\xf1\xd1\xac%\xc5\xfe?'
tRp766
sg92
g171
sg94
g38
(g40
S'\xed]\xfd\xdc\x1af\xf9?'
tRp767
sg96
g38
(g40
S'\xf2\x1a\xcak(\xaf\x17@'
tRp768
sg98
g38
(g40
S'H\xe1z\x14\xaeG\x13@'
tRp769
sg100
g38
(g40
S'\x9bz\x90\xfe\x14*\xf9?'
tRp770
sg102
g38
(g40
S'\xac\xaa\xaa\xaa\xaa*\x1f@'
tRp771
sg104
g38
(g40
S'\xfc\x8c\x01\xfc\xc3-\xfb?'
tRp772
stRp773
ag1
(g65
g66
(dp774
g68
g161
sg70
g38
(g40
S'H\xe1z\x14\xaeG\x11@'
tRp775
sg72
g38
(g40
S'<0\x94\xa4\x8a\x01\xda?'
tRp776
sg74
S'\xc1guila'
p777
sg76
g38
(g40
S'\x1b\xcak(\xaf\xa1\x18@'
tRp778
sg78
g38
(g40
S'H\xc2#\x84\xca\x8e\x03@'
tRp779
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp780
sg83
g85
sg86
S'Eagle'
p781
sg88
S'../stimuli_figure/Eagle.jpeg'
p782
sg90
g38
(g40
S'\x93X]\x0c\x84\xd2\xf8?'
tRp783
sg92
g171
sg94
g38
(g40
S'\xcd\xcc\xcc\xcc\xcc\xcc\xfc?'
tRp784
sg96
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x18@'
tRp785
sg98
g38
(g40
S'q=\n\xd7\xa3p\x1f@'
tRp786
sg100
g38
(g40
S'\x9a\xf6\xef\xf9\x89~\x00@'
tRp787
sg102
g38
(g40
S'q=\n\xd7\xa3p\x1d@'
tRp788
sg104
g38
(g40
S's\xad\xe9?#\xd3\xfa?'
tRp789
stRp790
ag1
(g65
g66
(dp791
g68
g69
sg70
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\r@'
tRp792
sg72
g38
(g40
S'\xe4B\xd2"\xea\xde\xe3?'
tRp793
sg74
S'Alambre'
p794
sg76
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\n@'
tRp795
sg78
g38
(g40
S'\x06\x9a+\x11\x17y\x00@'
tRp796
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp797
sg83
g85
sg86
S'Wire'
p798
sg88
S'../stimuli_figure/Wire.jpeg'
p799
sg90
g38
(g40
S'\xbe\xc5\xd5\\\xfe\xaf\xf9?'
tRp800
sg92
g93
sg94
g38
(g40
S'\xea\xf8\xd2\xa9\x7f*\xf5?'
tRp801
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x10@'
tRp802
sg98
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x12@'
tRp803
sg100
g38
(g40
S'\xc6\x1b\xbb\xa60\x8e\xf8?'
tRp804
sg102
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x1d@'
tRp805
sg104
g38
(g40
S'$c\x93]q2\x01@'
tRp806
stRp807
ag1
(g65
g66
(dp808
g68
g69
sg70
g38
(g40
S'\\\x8f\xc2\xf5(\\\x13@'
tRp809
sg72
g38
(g40
S'\xa4q\xb3L\x00\xdc\xdb?'
tRp810
sg74
S'Alfombra'
p811
sg76
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x14@'
tRp812
sg78
g38
(g40
S'\xf8\x19\xd3#\x93\x8e\xff?'
tRp813
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp814
sg83
g85
sg86
S'Carpet'
p815
sg88
S'../stimuli_figure/Carpet.jpeg'
p816
sg90
g38
(g40
S'\xc1X\xcb\xeb\x0c%\xf3?'
tRp817
sg92
g93
sg94
g38
(g40
S'\xdb\xd1M;XK\x01@'
tRp818
sg96
g38
(g40
S'\xe85\x94\xd7P^\x07@'
tRp819
sg98
g38
(g40
S'R\xb8\x1e\x85\xeb\x110@'
tRp820
sg100
g38
(g40
S'9\x1d\xc4\xc037\x06@'
tRp821
sg102
g38
(g40
S'\xc3\xf5(\\\x8f\xc2\x1d@'
tRp822
sg104
g38
(g40
S'\xc0\xd41\xb9\xee$\xfd?'
tRp823
stRp824
ag1
(g65
g66
(dp825
g68
g69
sg70
g38
(g40
S'\xcd\xcc\xcc\xcc\xcc\xcc\x0c@'
tRp826
sg72
g38
(g40
S'\xfen\xfcA\xc3}\xe5?'
tRp827
sg74
S'Ametralladora'
p828
sg76
g38
(g40
S'\x87\xf2\x1a\xcak(\xf7?'
tRp829
sg78
g38
(g40
S'@\xa4\xfc\xe9u\x9e\x02@'
tRp830
sg80
g38
(g81
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp831
sg83
g85
sg86
S'Machine gun'
p832
sg88
S'../stimuli_figure/Machine gun.jpeg'
p833
sg90
g38
(g40
S'*O\xdc\xb3\xb2\x85\xec?'
tRp834
sg92
g93
sg94
g38
(g40
S'\t\x01\xcb\x9a\xb6\x92\x02@'
tRp835
sg96
g38
(g40
S'6\x94\xd7P^C\x1d@'
tRp836
sg98
g38
(g40
S'{\x14\xaeG\xe1z\xb4?'
tRp837
sg100
g38
(g40
S'\xb9\xfe.8\xb14\x04\xc0'
tRp838
sg102
g38
(g40
S'\\\x8f\xc2\xf5(\\\x1b@'
tRp839
sg104
g38
(g40
S'\xd2+\xaen\xef\x8a\x00@'
tRp840
stRp841
ag1
(g65
g66
(dp842
g68
g69
sg70
g38
(g40
S'R\xb8\x1e\x85\xebQ\x10@'
tRp843
sg72
g38
(g40
S'\xa0\xf7j\x18*&\xdb?'
tRp844
sg74
S'Arco'
p845
sg76
g38
(g40
S'\xe55\x94\xd7P^\x13@'
tRp846
sg78
g38
(g40
S'iG\x8a\xe3\x80\xb8\x03@'
tRp847
sg80
g38
(g81
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp848
sg83
g85
sg86
S'Arc'
p849
sg88
S'../stimuli_figure/Arc.jpeg'
p850
sg90
g38
(g40
S'm]\xa6\x83%7\xf5?'
tRp851
sg92
g93
sg94
g38
(g40
S'M{g\xc4x\t\x02@'
tRp852
sg96
g38
(g40
S'^Cy\r\xe55\x10@'
tRp853
sg98
g38
(g40
S'\\\x8f\xc2\xf5(\xdc6@'
tRp854
sg100
g38
(g40
S'\xdfC\xc1\xeb\xfc\x08\t@'
tRp855
sg102
g38
(g40
S'\xcd\xcc\xcc\xcc\xcc\xcc\x18@'
tRp856
sg104
g38
(g40
S'\xfd\xa3\x7fz\x8aR\xfb?'
tRp857
stRp858
ag1
(g65
g66
(dp859
g68
g69
sg70
g38
(g40
S'H\xe1z\x14\xaeG\t@'
tRp860
sg72
g38
(g40
S'\xa4\xa2\x8b\xa2\x8d\xad\xde?'
tRp861
sg74
S'Bengala'
p862
sg76
g38
(g40
S'\x1b\xcak(\xaf\xa1\x12@'
tRp863
sg78
g38
(g40
S'\x85P\xe9\x9c\xaa\xd1\xfd?'
tRp864
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp865
sg83
g85
sg86
S'Bengal'
p866
sg88
S'../stimuli_figure/Bengal.jpeg'
p867
sg90
g38
(g40
S"\xa1)\xc1(\x1e'\xfc?"
tRp868
sg92
g93
sg94
g38
(g40
S'\x95\xb6q)\xb4C\xf9?'
tRp869
sg96
g38
(g40
S'k(\xaf\xa1\xbc\x86\x18@'
tRp870
sg98
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\xf1?'
tRp871
sg100
g38
(g40
S'\x80\x91|\xc2\x13R\xb1?'
tRp872
sg102
g38
(g40
S'R\xb8\x1e\x85\xebQ\x1c@'
tRp873
sg104
g38
(g40
S'\x0c\xd9LU\x1d\xb9\xf8?'
tRp874
stRp875
ag1
(g65
g66
(dp876
g68
g69
sg70
g38
(g40
S')\\\x8f\xc2\xf5(\x10@'
tRp877
sg72
g38
(g40
S'\xbb\xd6\x1fM\x03"\xe6?'
tRp878
sg74
S'Bistur\xed'
p879
sg76
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\n@'
tRp880
sg78
g38
(g40
S'\x80\x01\xfd\xebQc\x03@'
tRp881
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp882
sg83
g85
sg86
S'Scalpel'
p883
sg88
S'../stimuli_figure/Scalpel.jpeg'
p884
sg90
g38
(g40
S'\xc0\xab\xae\xc4\xfd\xb4\x00@'
tRp885
sg92
g93
sg94
g38
(g40
S'\x93L\xca\xd1\x12\xce\xfa?'
tRp886
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x1a@'
tRp887
sg98
g38
(g40
S'H\xe1z\x14\xaeG\x18@'
tRp888
sg100
g38
(g40
S'\xb6\xde{\x8d\x8e\xda\xfc?'
tRp889
sg102
g38
(g40
S'\\\x8f\xc2\xf5(\\\x1f@'
tRp890
sg104
g38
(g40
S'\xe0\xc3\x00\xde\x0f\x81\x00@'
tRp891
stRp892
ag1
(g65
g66
(dp893
g68
g69
sg70
g38
(g40
S'\xb8\x1e\x85\xebQ\xb8\x0e@'
tRp894
sg72
g38
(g40
S'\xb2\xbf\xf7<\x85\x87\xde?'
tRp895
sg74
S'Br\xfajula'
p896
sg76
g38
(g40
S'\xbd\x86\xf2\x1a\xcak\x14@'
tRp897
sg78
g38
(g40
S'\xe9\n\xbe-=\xd7\x01@'
tRp898
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp899
sg83
g85
sg86
S'Compass'
p900
sg88
S'../stimuli_figure/Compass.jpeg'
p901
sg90
g38
(g40
S'Z\xc1t\xbd\xb7\x9d\xf8?'
tRp902
sg92
g93
sg94
g38
(g40
S'*\x88\xe81[\xb2\xf1?'
tRp903
sg96
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x10@'
tRp904
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x04@'
tRp905
sg100
g38
(g40
S'y\xe0\xe0\xf0@R\xed?'
tRp906
sg102
g38
(g40
S'\\\x8f\xc2\xf5(\\\x1f@'
tRp907
sg104
g38
(g40
S'\x92\xff\x83Bg\xe6\xfe?'
tRp908
stRp909
ag1
(g65
g66
(dp910
g68
g69
sg70
g38
(g40
S'\\\x8f\xc2\xf5(\\\x13@'
tRp911
sg72
g38
(g40
S'U\xda>\xbf\xdb!\xe2?'
tRp912
sg74
S'Cheque'
p913
sg76
g38
(g40
S'y\r\xe55\x94\xd7\x18@'
tRp914
sg78
g38
(g40
S'\x0b\x01\xcb\x9a\xb6\x92\x02@'
tRp915
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp916
sg83
g85
sg86
S'Check'
p917
sg88
S'../stimuli_figure/Check.jpeg'
p918
sg90
g38
(g40
S'j9\x15\x16\x8f\xfa\xf6?'
tRp919
sg92
g93
sg94
g38
(g40
S'N4\xb2*\x937\xff?'
tRp920
sg96
g38
(g40
S'\xcak(\xaf\xa1\xbc\x16@'
tRp921
sg98
g38
(g40
S'q=\n\xd7\xa3p\x10@'
tRp922
sg100
g38
(g40
S'(\xb1-wa\x9d\xf6?'
tRp923
sg102
g38
(g40
S'\\\x8f\xc2\xf5(\\\x1b@'
tRp924
sg104
g38
(g40
S'ZJSe\x0f\xdd\xfb?'
tRp925
stRp926
ag1
(g65
g66
(dp927
g68
g69
sg70
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x13@'
tRp928
sg72
g38
(g40
S'\x94,\xdb\x84V~\xe3?'
tRp929
sg74
S'Cometa'
p930
sg76
g38
(g40
S'6\x94\xd7P^C\x19@'
tRp931
sg78
g38
(g40
S'\xb8E7\xcbT\xc6\x03@'
tRp932
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp933
sg83
g85
sg86
S'Kite'
p934
sg88
S'../stimuli_figure/Kite.jpeg'
p935
sg90
g38
(g40
S'I\x95+N\xda\xa8\xf6?'
tRp936
sg92
g93
sg94
g38
(g40
S'G\xb2c\xe9]P\xfd?'
tRp937
sg96
g38
(g40
S'\xcak(\xaf\xa1\xbc\x14@'
tRp938
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1e@'
tRp939
sg100
g38
(g40
S'\xa3\xb9\x8ey\x85\x1e\x00@'
tRp940
sg102
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x1c@'
tRp941
sg104
g38
(g40
S'\xbf\xb4pw&\xcd\xfb?'
tRp942
stRp943
ag1
(g65
g66
(dp944
g68
g69
sg70
g38
(g40
S'\\\x8f\xc2\xf5(\\\x0f@'
tRp945
sg72
g38
(g40
S'\x94\xef\xe7{sg\xe5?'
tRp946
sg74
S'Dardo'
p947
sg76
g38
(g40
S'Dy\r\xe55\x94\x11@'
tRp948
sg78
g38
(g40
S'(\xe3aJ\xb2v\x02@'
tRp949
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp950
sg83
g85
sg86
S'Dart'
p951
sg88
S'../stimuli_figure/Dart.jpeg'
p952
sg90
g38
(g40
S"\x81\xe5\xfaC'\xb1\x00@"
tRp953
sg92
g93
sg94
g38
(g40
S'\x16\xa4w\xaf\xdd\xf6\xf6?'
tRp954
sg96
g38
(g40
S'Q^Cy\r\xe5\x13@'
tRp955
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1e@'
tRp956
sg100
g38
(g40
S'\xa3\xb9\x8ey\x85\x1e\x00@'
tRp957
sg102
g38
(g40
S'H\xe1z\x14\xaeG\x1d@'
tRp958
sg104
g38
(g40
S':p\xe3V\x81\xe4\x00@'
tRp959
stRp960
ag1
(g65
g66
(dp961
g68
g69
sg70
g38
(g40
S'\n\xd7\xa3p=\n\x0f@'
tRp962
sg72
g38
(g40
S'\x93\xd4\xe3C_\x9b\xd7?'
tRp963
sg74
S'Desag\xfce'
p964
sg76
g38
(g40
S'Cy\r\xe55\x94\x07@'
tRp965
sg78
g38
(g40
S'\xe3$o\xd4-\xaa\x02@'
tRp966
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp967
sg83
g85
sg86
S'Drain'
p968
sg88
S'../stimuli_figure/Drain.jpeg'
p969
sg90
g38
(g40
S'T\xc6\xc5\xcb\xc8\xcd\xf7?'
tRp970
sg92
g93
sg94
g38
(g40
S'B\xec\xf5\xc5\xd7\x17\xf6?'
tRp971
sg96
g38
(g40
S'\x0c\xe55\x94\xd7P\x10@'
tRp972
sg98
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\xf1?'
tRp973
sg100
g38
(g40
S'\x80\x91|\xc2\x13R\xb1?'
tRp974
sg102
g38
(g40
S'q=\n\xd7\xa3p\x1d@'
tRp975
sg104
g38
(g40
S'\xb6\x1e)Eva\xfd?'
tRp976
stRp977
ag1
(g65
g66
(dp978
g68
g69
sg70
g38
(g40
S'ffffff\x0e@'
tRp979
sg72
g38
(g40
S'\xdb\xea\x85\xc3?\xbd\xdc?'
tRp980
sg74
S'Escudo'
p981
sg76
g38
(g40
S'(\xaf\xa1\xbc\x86\xf2\x12@'
tRp982
sg78
g38
(g40
S'\x1c3\x90E\xa7y\x02@'
tRp983
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp984
sg83
g85
sg86
S'Shield'
p985
sg88
S'../stimuli_figure/Shield.jpeg'
p986
sg90
g38
(g40
S'\xe5\x1c\x03G\xfd"\xf7?'
tRp987
sg92
g93
sg94
g38
(g40
S'\xab\xda/(\xcc)\x05@'
tRp988
sg96
g38
(g40
S'\xa2\xbc\x86\xf2\x1a\xca\x13@'
tRp989
sg98
g38
(g40
S'\\\x8f\xc2\xf5(\xdc!@'
tRp990
sg100
g38
(g40
S'\xb8\xf9*\xbe\xec\x83\x01@'
tRp991
sg102
g38
(g40
S'\xac\xaa\xaa\xaa\xaa*\x19@'
tRp992
sg104
g38
(g40
S'\xeb\x9a\x10\xe16Q\xfc?'
tRp993
stRp994
ag1
(g65
g66
(dp995
g68
g69
sg70
g38
(g40
S'\n\xd7\xa3p=\n\x0f@'
tRp996
sg72
g38
(g40
S'\xff\xdf4.\xad$\xe4?'
tRp997
sg74
S'Esterilla'
p998
sg76
g38
(g40
S'(\xaf\xa1\xbc\x86\xf2\x14@'
tRp999
sg78
g38
(g40
S'<o\xca\xdd\xae]\x03@'
tRp1000
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp1001
sg83
g85
sg86
S'Wicker'
p1002
sg88
S'../stimuli_figure/Wicker.jpeg'
p1003
sg90
g38
(g40
S"u\rL9\x93'\xfa?"
tRp1004
sg92
g93
sg94
g38
(g40
S'\x92\xae\x95z\x8e\xaa\x04@'
tRp1005
sg96
g38
(g40
S'\x89\xf2\x1a\xcak(\x0b@'
tRp1006
sg98
g38
(g40
S'\n\xd7\xa3p=\n\xd7?'
tRp1007
sg100
g38
(g40
S'R\x14\x81\xfa\xaeX\xf0\xbf'
tRp1008
sg102
g38
(g40
S'=\n\xd7\xa3p=\x1a@'
tRp1009
sg104
g38
(g40
S'c\x86@\xbb\xa7v\xff?'
tRp1010
stRp1011
ag1
(g65
g66
(dp1012
g68
g69
sg70
g38
(g40
S'\xaeG\xe1z\x14\xae\x0f@'
tRp1013
sg72
g38
(g40
S'A\x9b0U\xc7\xa2\xdb?'
tRp1014
sg74
S'Faja'
p1015
sg76
g38
(g40
S'\x92\xd7P^Cy\r@'
tRp1016
sg78
g38
(g40
S'U\nlD8\xee\x03@'
tRp1017
sg80
g38
(g81
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp1018
sg83
g85
sg86
S'Belt'
p1019
sg88
S'../stimuli_figure/Belt.jpeg'
p1020
sg90
g38
(g40
S'\xa3,\x82=\xcd\x97\xfa?'
tRp1021
sg92
g93
sg94
g38
(g40
S'\xc3|w\x13\xf8Y\xf5?'
tRp1022
sg96
g38
(g40
S'\xcbk(\xaf\xa1\xbc\x0e@'
tRp1023
sg98
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x02@'
tRp1024
sg100
g38
(g40
S'\x9c\xfd{N\x1e\xee\xea?'
tRp1025
sg102
g38
(g40
S'\xac\xaa\xaa\xaa\xaa*\x1c@'
tRp1026
sg104
g38
(g40
S'\x7f\nG\x84\xc5\xf0\xfc?'
tRp1027
stRp1028
ag1
(g65
g66
(dp1029
g68
g69
sg70
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x12@'
tRp1030
sg72
g38
(g40
S'O\xe8\x828w?\xd8?'
tRp1031
sg74
S'Flecha'
p1032
sg76
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x0e@'
tRp1033
sg78
g38
(g40
S'\x9dP\xf6!\xf3\x1d\x04@'
tRp1034
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp1035
sg83
g85
sg86
S'Arrow'
p1036
sg88
S'../stimuli_figure/Arrow.jpeg'
p1037
sg90
g38
(g40
S'\xafh\x94\x90\xe7\xc5\xfe?'
tRp1038
sg92
g93
sg94
g38
(g40
S'J\x15\xb7\xc0c\x93\x01@'
tRp1039
sg96
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x16@'
tRp1040
sg98
g38
(g40
S'\xd7\xa3p=\n\xd7\x11@'
tRp1041
sg100
g38
(g40
S'z1\xcc\x1c!\xec\xf7?'
tRp1042
sg102
g38
(g40
S'R\xb8\x1e\x85\xebQ\x18@'
tRp1043
sg104
g38
(g40
S'\x02\x9d\xe8\xb769\x01@'
tRp1044
stRp1045
ag1
(g65
g66
(dp1046
g68
g69
sg70
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\x11@'
tRp1047
sg72
g38
(g40
S'\x04q\xf0\x80\xdft\xd7?'
tRp1048
sg74
S'Hamaca'
p1049
sg76
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1c@'
tRp1050
sg78
g38
(g40
S'\x19\xe0`Z\x8d\xfa\x04@'
tRp1051
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp1052
sg83
g85
sg86
S'Hammock'
p1053
sg88
S'../stimuli_figure/Hammock.jpeg'
p1054
sg90
g38
(g40
S'q\x85Y\x16\x9d\x1b\xf8?'
tRp1055
sg92
g93
sg94
g38
(g40
S'\xa5\xb6\t\x8d\xf7M\xf6?'
tRp1056
sg96
g38
(g40
S'l(\xaf\xa1\xbc\x86\n@'
tRp1057
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x04@'
tRp1058
sg100
g38
(g40
S'y\xe0\xe0\xf0@R\xed?'
tRp1059
sg102
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x1f@'
tRp1060
sg104
g38
(g40
S's#x\x80\x82#\x02@'
tRp1061
stRp1062
ag1
(g65
g66
(dp1063
g68
g69
sg70
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x14@'
tRp1064
sg72
g38
(g40
S'2u\xfd\x17\xbb\xc0\xd5?'
tRp1065
sg74
S'Inyecci\xf3n'
p1066
sg76
g38
(g40
S'\xbd\x86\xf2\x1a\xcak\x00@'
tRp1067
sg78
g38
(g40
S'J?h\x11\xea\xee\xfd?'
tRp1068
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp1069
sg83
g85
sg86
S'Injection'
p1070
sg88
S'../stimuli_figure/Injection.jpeg'
p1071
sg90
g38
(g40
S'\xc8\x80l\xfa\\\xaa\xf3?'
tRp1072
sg92
g93
sg94
g38
(g40
S'm\xf9SK\x03+\xfd?'
tRp1073
sg96
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1c@'
tRp1074
sg98
g38
(g40
S'\xd7\xa3p=\n\xd7\x1b@'
tRp1075
sg100
g38
(g40
S'\xd9\x01\xeb\xa1\xf9\n\xff?'
tRp1076
sg102
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x1a@'
tRp1077
sg104
g38
(g40
S'9n\xe5\x0c\xb3\xd1\xf7?'
tRp1078
stRp1079
ag1
(g65
g66
(dp1080
g68
g69
sg70
g38
(g40
S'{\x14\xaeG\xe1z\x0c@'
tRp1081
sg72
g38
(g40
S'\xbb\xe5\x15\xd8y\xba\xdd?'
tRp1082
sg74
S'Jeringa'
p1083
sg76
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp1084
sg78
g38
(g40
S'\x82=\xaa\xc7\x9b|\x02@'
tRp1085
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp1086
sg83
g85
sg86
S'Syringe'
p1087
sg88
S'../stimuli_figure/Syringe.jpeg'
p1088
sg90
g38
(g40
S'\x9d\x82\x1c\xa3LT\xf3?'
tRp1089
sg92
g93
sg94
g38
(g40
S'\xa2\x1f\x1a\x87\xc2\x86\x04@'
tRp1090
sg96
g38
(g40
S'\xa3\xbc\x86\xf2\x1a\xca\x1b@'
tRp1091
sg98
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\xf1?'
tRp1092
sg100
g38
(g40
S'\x80\x91|\xc2\x13R\xb1?'
tRp1093
sg102
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x19@'
tRp1094
sg104
g38
(g40
S'\xc5\xaf\xc3\xe2F\x8d\xfa?'
tRp1095
stRp1096
ag1
(g65
g66
(dp1097
g68
g69
sg70
g38
(g40
S'\xd7\xa3p=\n\xd7\x13@'
tRp1098
sg72
g38
(g40
S'\xba\x12\x86\xb6\n\xf2\xe5?'
tRp1099
sg74
S'Ladrillo'
p1100
sg76
g38
(g40
S'(\xaf\xa1\xbc\x86\xf2\x10@'
tRp1101
sg78
g38
(g40
S'\x11\xbb"\x14\xb3\x96\x04@'
tRp1102
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp1103
sg83
g85
sg86
S'Brick'
p1104
sg88
S'../stimuli_figure/Brick.jpeg'
p1105
sg90
g38
(g40
S'\xcaV\x829\xe7\xf1\xf7?'
tRp1106
sg92
g93
sg94
g38
(g40
S'\xad=\x84|\x84S\xff?'
tRp1107
sg96
g38
(g40
S'l(\xaf\xa1\xbc\x86\n@'
tRp1108
sg98
g38
(g40
S'\x14\xaeG\xe1z\x14 @'
tRp1109
sg100
g38
(g40
S"\xac\x16\xb9'\xe9\xac\x00@"
tRp1110
sg102
g38
(g40
S'ffffff\x1a@'
tRp1111
sg104
g38
(g40
S"\xa2'\x84\xd7\x1e\x14\xfd?"
tRp1112
stRp1113
ag106
ag1
(g65
g66
(dp1114
g68
g69
sg70
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\n@'
tRp1115
sg72
g38
(g40
S'x\xaf\xc9B8\x81\xdb?'
tRp1116
sg74
S'L\xe1tigo'
p1117
sg76
g38
(g40
S'\xbd\x86\xf2\x1a\xcak\x08@'
tRp1118
sg78
g38
(g40
S'\xea\xf86\xc3Ko\x02@'
tRp1119
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp1120
sg83
g85
sg86
S'Whip'
p1121
sg88
S'../stimuli_figure/Whip.jpeg'
p1122
sg90
g38
(g40
S'\xd6\x97\xb1.\x7f\x8f\xfc?'
tRp1123
sg92
g93
sg94
g38
(g40
S'\xb1\x06\xb4\xdd\xe1:\xf8?'
tRp1124
sg96
g38
(g40
S'6\x94\xd7P^C\x17@'
tRp1125
sg98
g38
(g40
S'\xd7\xa3p=\n\xd7\x11@'
tRp1126
sg100
g38
(g40
S'z1\xcc\x1c!\xec\xf7?'
tRp1127
sg102
g38
(g40
S'\xe1z\x14\xaeG\xe1\x1e@'
tRp1128
sg104
g38
(g40
S'5"\xde\xe0&\x8d\xfb?'
tRp1129
stRp1130
ag1
(g65
g66
(dp1131
g68
g69
sg70
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x08@'
tRp1132
sg72
g38
(g40
S'\xfe\xda\x01\xf0\xd8\x10\xe6?'
tRp1133
sg74
S'Machete'
p1134
sg76
g38
(g40
S'\xa2\xbc\x86\xf2\x1a\xca\x03@'
tRp1135
sg78
g38
(g40
S'\x91\xad\xbc:\xac\x16\x03@'
tRp1136
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp1137
sg83
g85
sg86
S'Machete'
p1138
sg88
S'../stimuli_figure/Machete.jpeg'
p1139
sg90
g38
(g40
S'\xd53\x84\xdc\x88\x85\xfb?'
tRp1140
sg92
g93
sg94
g38
(g40
S'\xbaJ=\xb3\xa9\xef\xf1?'
tRp1141
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x18@'
tRp1142
sg98
g38
(g40
S'\xa4p=\n\xd7\xa3\xfc?'
tRp1143
sg100
g38
(g40
S'\x15\x9a\xcf\xa6\x82\xa1\xe2?'
tRp1144
sg102
g38
(g40
S'=\n\xd7\xa3p=\x1e@'
tRp1145
sg104
g38
(g40
S'8p\xe3V\x81\xe4\x00@'
tRp1146
stRp1147
ag1
(g65
g66
(dp1148
g68
g69
sg70
g38
(g40
S')\\\x8f\xc2\xf5(\x10@'
tRp1149
sg72
g38
(g40
S'\xf9\xba\x16\x90\xd6\x85\xe4?'
tRp1150
sg74
S'Mecedora'
p1151
sg76
g38
(g40
S'\xe55\x94\xd7P^\x19@'
tRp1152
sg78
g38
(g40
S'u\x1badk\xd4\x02@'
tRp1153
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp1154
sg83
g85
sg86
S'Rocking chair'
p1155
sg88
S'../stimuli_figure/Rocking chair.jpeg'
p1156
sg90
g38
(g40
S'\xe4a\x8d\t\x1d[\xfd?'
tRp1157
sg92
g93
sg94
g38
(g40
S";\xe9'9\xab3\x02@"
tRp1158
sg96
g38
(g40
S'6\x94\xd7P^C\x05@'
tRp1159
sg98
g38
(g40
S'q=\n\xd7\xa3p\x10@'
tRp1160
sg100
g38
(g40
S'(\xb1-wa\x9d\xf6?'
tRp1161
sg102
g38
(g40
S'\x14\xaeG\xe1z\x14\x1a@'
tRp1162
sg104
g38
(g40
S'!\x8fxn/\xa3\xfa?'
tRp1163
stRp1164
ag1
(g65
g66
(dp1165
g68
g69
sg70
g38
(g40
S'\xcd\xcc\xcc\xcc\xcc\xcc\x0c@'
tRp1166
sg72
g38
(g40
S'G=3\xb4\xd8x\xda?'
tRp1167
sg74
S'Misil'
p1168
sg76
g38
(g40
S'y\r\xe55\x94\xd7\xf8?'
tRp1169
sg78
g38
(g40
S'\x89\x82s\x137\x0b\x03@'
tRp1170
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp1171
sg83
g85
sg86
S'Missile'
p1172
sg88
S'../stimuli_figure/Missile.jpeg'
p1173
sg90
g38
(g40
S'\xba[]\xd9\n+\xe7?'
tRp1174
sg92
g93
sg94
g38
(g40
S'\xea\xf8\xd2\xa9\x7f*\xf5?'
tRp1175
sg96
g38
(g40
S'\x87\xf2\x1a\xcak(\x1b@'
tRp1176
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x14@'
tRp1177
sg100
g38
(g40
S'4\x8d\xed\xf7A\xc0\xf9?'
tRp1178
sg102
g38
(g40
S'333333\x1f@'
tRp1179
sg104
g38
(g40
S'B\x9c\x93EA\xd1\xff?'
tRp1180
stRp1181
ag1
(g65
g66
(dp1182
g68
g69
sg70
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\r@'
tRp1183
sg72
g38
(g40
S'2yQ\xce\xce1\xe3?'
tRp1184
sg74
S'Navaja'
p1185
sg76
g38
(g40
S'\x1b\xcak(\xaf\xa1\x00@'
tRp1186
sg78
g38
(g40
S'\xcf\x13\xfa\x17^m\xfc?'
tRp1187
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp1188
sg83
g85
sg86
S'Razor'
p1189
sg88
S'../stimuli_figure/Razor.jpeg'
p1190
sg90
g38
(g40
S'-\x88\xa3m#X\xf7?'
tRp1191
sg92
g93
sg94
g38
(g40
S'\xd7Q\xc0\x9e\xb0\x93\xfc?'
tRp1192
sg96
g38
(g40
S'\xf2\x1a\xcak(\xaf\x19@'
tRp1193
sg98
g38
(g40
S'H\xe1z\x14\xae\xc7*@'
tRp1194
sg100
g38
(g40
S'\xfd\ty~\x8d\xc1\x04@'
tRp1195
sg102
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x1c@'
tRp1196
sg104
g38
(g40
S'\x87\xde\n\n+6\x01@'
tRp1197
stRp1198
ag1
(g65
g66
(dp1199
g68
g69
sg70
g38
(g40
S')\\\x8f\xc2\xf5(\x0c@'
tRp1200
sg72
g38
(g40
S'\x80\xd3\xdc\x02\x0c\xbb\xd5?'
tRp1201
sg74
S'Patinete'
p1202
sg76
g38
(g40
S'y\r\xe55\x94\xd7\x16@'
tRp1203
sg78
g38
(g40
S'\x9e$\x16_5t\x01@'
tRp1204
sg80
g38
(g81
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp1205
sg83
g85
sg86
S'Scooter'
p1206
sg88
S'../stimuli_figure/Scooter.jpeg'
p1207
sg90
g38
(g40
S'\xec\xf0\xf8\xaf\xbeN\xfc?'
tRp1208
sg92
g93
sg94
g38
(g40
S'\x93L\xca\xd1\x12\xce\xfa?'
tRp1209
sg96
g38
(g40
S'\xbd\x86\xf2\x1a\xcak\x14@'
tRp1210
sg98
g38
(g40
S'\n\xd7\xa3p=\n\xc7?'
tRp1211
sg100
g38
(g40
S'I1\xfey\xd0o\xfb\xbf'
tRp1212
sg102
g38
(g40
S'\\\x8f\xc2\xf5(\\\x1b@'
tRp1213
sg104
g38
(g40
S'\x12\xf8\x19{\xb7\x84\xff?'
tRp1214
stRp1215
ag1
(g65
g66
(dp1216
g68
g69
sg70
g38
(g40
S'\n\xd7\xa3p=\n\x13@'
tRp1217
sg72
g38
(g40
S'q2\x85.sP\xd8?'
tRp1218
sg74
S'Pegamento'
p1219
sg76
g38
(g40
S'Dy\r\xe55\x94\x11@'
tRp1220
sg78
g38
(g40
S'\xb3O)>\xb7\xa8\x02@'
tRp1221
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp1222
sg83
g85
sg86
S'Glue'
p1223
sg88
S'../stimuli_figure/Glue.jpeg'
p1224
sg90
g38
(g40
S'\xf4\x90\xdea[\xaf\xf7?'
tRp1225
sg92
g93
sg94
g38
(g40
S'\x81\x9e\xe6\xf1V\x18\xfc?'
tRp1226
sg96
g38
(g40
S'5\x94\xd7P^C\r@'
tRp1227
sg98
g38
(g40
S'\xc3\xf5(\\\x8f\xc2\xf9?'
tRp1228
sg100
g38
(g40
S'\x87\xb7\x01\xec\x9ez\xde?'
tRp1229
sg102
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x1d@'
tRp1230
sg104
g38
(g40
S'\xf2\x06\x1c\xe9\xec\xe7\xfb?'
tRp1231
stRp1232
ag1
(g65
g66
(dp1233
g68
g69
sg70
g38
(g40
S'333333\x13@'
tRp1234
sg72
g38
(g40
S'\xf9\xfa\x99\xea\x98\x94\xe2?'
tRp1235
sg74
S'Peluche'
p1236
sg76
g38
(g40
S'Q^Cy\r\xe5\x1d@'
tRp1237
sg78
g38
(g40
S'\xb42i\xd2cR\x03@'
tRp1238
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp1239
sg83
g85
sg86
S'Teddy'
p1240
sg88
S'../stimuli_figure/Teddy.jpeg'
p1241
sg90
g38
(g40
S'\x85\xe5w\x93]\x97\xf3?'
tRp1242
sg92
g93
sg94
g38
(g40
S'\x17\x8f\x81\x91\xb1#\x01@'
tRp1243
sg96
g38
(g40
S'\x19\xcak(\xaf\xa1\x10@'
tRp1244
sg98
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\x01@'
tRp1245
sg100
g38
(g40
S'\x1f\xccIw\x85X\xe8?'
tRp1246
sg102
g38
(g40
S'=\n\xd7\xa3p=\x1a@'
tRp1247
sg104
g38
(g40
S'\xba\xba\xd7\xac\xec)\x04@'
tRp1248
stRp1249
ag1
(g65
g66
(dp1250
g68
g69
sg70
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\n@'
tRp1251
sg72
g38
(g40
S'\xe0\x9d\xcf\xa5\xa1\xcf\xe5?'
tRp1252
sg74
S'Pu\xf1al'
p1253
sg76
g38
(g40
S'\xcdk(\xaf\xa1\xbc\xfe?'
tRp1254
sg78
g38
(g40
S'\xf6tD,\xc2\x9b\x00@'
tRp1255
sg80
g38
(g81
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp1256
sg83
g85
sg86
S'Dagger'
p1257
sg88
S'../stimuli_figure/Dagger.jpeg'
p1258
sg90
g38
(g40
S'\x94\xbc\x87\x95\xc6\x0b\xf7?'
tRp1259
sg92
g93
sg94
g38
(g40
S'\x8e\xed\x1f\xcfHY\xf9?'
tRp1260
sg96
g38
(g40
S'By\r\xe55\x94\x1b@'
tRp1261
sg98
g38
(g40
S'\x8f\xc2\xf5(\\\x8f\x17@'
tRp1262
sg100
g38
(g40
S'\xb6hV\xaeA_\xfc?'
tRp1263
sg102
g38
(g40
S'\x14\xaeG\xe1z\x14\x1e@'
tRp1264
sg104
g38
(g40
S'm\xdf\x01!\xf5\xc8\xfb?'
tRp1265
stRp1266
ag1
(g65
g66
(dp1267
g68
g69
sg70
g38
(g40
S'\xcd\xcc\xcc\xcc\xcc\xcc\x0c@'
tRp1268
sg72
g38
(g40
S'T\xb2\xc5t\xbe8\xe6?'
tRp1269
sg74
S'Refiner\xeda'
p1270
sg76
g38
(g40
S'\x91\xcf\xba\xc1\x14\xf9\x0c@'
tRp1271
sg78
g38
(g40
S'.\xc2\x93\xd1\x10\xaa\x07@'
tRp1272
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp1273
sg83
g85
sg86
S'Refinery'
p1274
sg88
S'../stimuli_figure/Refinery.jpeg'
p1275
sg90
g38
(g40
S'Z\xe2\xad \x9b|\xfe?'
tRp1276
sg92
g93
sg94
g38
(g40
S'gfffff\x02@'
tRp1277
sg96
g38
(g40
S'~\xd6\r\xa6\xc8g\x11@'
tRp1278
sg98
g38
(g40
S'{\x14\xaeG\xe1z\xec?'
tRp1279
sg100
g38
(g40
S'\xd2\x87\xb2\x01)\xd5\xbd\xbf'
tRp1280
sg102
g38
(g40
S'\xd7\xa3p=\n\xd7\x1b@'
tRp1281
sg104
g38
(g40
S'\xf5\x0e\xd4\x91Q\x86\x03@'
tRp1282
stRp1283
ag1
(g65
g66
(dp1284
g68
g69
sg70
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x13@'
tRp1285
sg72
g38
(g40
S',c*\xe7\xb4\xf5\xd5?'
tRp1286
sg74
S'Retrete'
p1287
sg76
g38
(g40
S'6\x94\xd7P^C\t@'
tRp1288
sg78
g38
(g40
S'~\xed\x8d\xdcC\xaa\x06@'
tRp1289
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp1290
sg83
g85
sg86
S'Toilet'
p1291
sg88
S'../stimuli_figure/Toilet.jpeg'
p1292
sg90
g38
(g40
S'\x17\xb8\xcf\x1217\xfb?'
tRp1293
sg92
g93
sg94
g38
(g40
S'=,\x0cp\xbd \xfa?'
tRp1294
sg96
g38
(g40
S'Q^Cy\r\xe5\r@'
tRp1295
sg98
g38
(g40
S'\x14\xaeG\xe1z\x14 @'
tRp1296
sg100
g38
(g40
S"\xac\x16\xb9'\xe9\xac\x00@"
tRp1297
sg102
g38
(g40
S'333333\x1f@'
tRp1298
sg104
g38
(g40
S'\xfd\xfb\xb2|\xb9d\x00@'
tRp1299
stRp1300
ag1
(g65
g66
(dp1301
g68
g69
sg70
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x13@'
tRp1302
sg72
g38
(g40
S'\xfa8"\x07\x87\x87\xda?'
tRp1303
sg74
S'Sacapuntas'
p1304
sg76
g38
(g40
S'y\r\xe55\x94\xd7\x12@'
tRp1305
sg78
g38
(g40
S'N\xbb\xc6d\x81\x95\x08@'
tRp1306
sg80
g38
(g81
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp1307
sg83
g85
sg86
S'Sharpener'
p1308
sg88
S'../stimuli_figure/Sharpener.jpeg'
p1309
sg90
g38
(g40
S'H.b!\xdaK\xf3?'
tRp1310
sg92
g93
sg94
g38
(g40
S'\xb5\xbf-|zR\x01@'
tRp1311
sg96
g38
(g40
S'\x92\xd7P^Cy\r@'
tRp1312
sg98
g38
(g40
S'\n\xd7\xa3p=\n\xc7?'
tRp1313
sg100
g38
(g40
S'I1\xfey\xd0o\xfb\xbf'
tRp1314
sg102
g38
(g40
S'\xac\xaa\xaa\xaa\xaa\xaa\x1d@'
tRp1315
sg104
g38
(g40
S'\n\xe0\xe5\xf5\xaa\xc8\xfd?'
tRp1316
stRp1317
ag1
(g65
g66
(dp1318
g68
g69
sg70
g38
(g40
S'\xf6(\\\x8f\xc2\xf5\x08@'
tRp1319
sg72
g38
(g40
S'\x80w\x1cy\xdb\x94\xd5?'
tRp1320
sg74
S'Sierra'
p1321
sg76
g38
(g40
S'\xf2\x1a\xcak(\xaf\r@'
tRp1322
sg78
g38
(g40
S"'\xea\xc5\xf7\\o\xff?"
tRp1323
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp1324
sg83
g85
sg86
S'Mountain range'
p1325
sg88
S'../stimuli_figure/Mountain range.jpeg'
p1326
sg90
g38
(g40
S']C,s\xea\xba\x00@'
tRp1327
sg92
g93
sg94
g38
(g40
S'\x9c\x81)\xc6\x86\xad\xf7?'
tRp1328
sg96
g38
(g40
S'^Cy\r\xe55\x14@'
tRp1329
sg98
g38
(g40
S'\xa4p=\n\xd7\xa3-@'
tRp1330
sg100
g38
(g40
S'T\xa5\xe0\xb6\\\x91\x05@'
tRp1331
sg102
g38
(g40
S'\n\xd7\xa3p=\n\x1b@'
tRp1332
sg104
g38
(g40
S'\xbd\x82\xae\xa1\x87$\x01@'
tRp1333
stRp1334
ag1
(g65
g66
(dp1335
g68
g69
sg70
g38
(g40
S'\n\xd7\xa3p=\n\x13@'
tRp1336
sg72
g38
(g40
S'\xff\x90\x03\x16\xd9f\xe0?'
tRp1337
sg74
S'Sombrilla'
p1338
sg76
g38
(g40
S'\xe55\x94\xd7P^\x17@'
tRp1339
sg78
g38
(g40
S'\x1d\x8aj\xe4#\xee\x01@'
tRp1340
sg80
g38
(g81
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp1341
sg83
g85
sg86
S'Umbrella'
p1342
sg88
S'../stimuli_figure/Umbrella.jpeg'
p1343
sg90
g38
(g40
S')\x0ek\x82k{\xf6?'
tRp1344
sg92
g93
sg94
g38
(g40
S'\x89\xc5\xf0]g\xdb\xf0?'
tRp1345
sg96
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x0e@'
tRp1346
sg98
g38
(g40
S')\\\x8f\xc2\xf5(\x11@'
tRp1347
sg100
g38
(g40
S'\xee59Q\xf3L\xf7?'
tRp1348
sg102
g38
(g40
S'\x85\xebQ\xb8\x1e\x85\x1f@'
tRp1349
sg104
g38
(g40
S"\xc4\xfa\xc8'18\xff?"
tRp1350
stRp1351
ag1
(g65
g66
(dp1352
g68
g69
sg70
g38
(g40
S'UUUUUU\x0f@'
tRp1353
sg72
g38
(g40
S'a\xb1\x00:\xe5\xe6\xd4?'
tRp1354
sg74
S'Soplete'
p1355
sg76
g38
(g40
S'\xaf\xa1\xbc\x86\xf2\x1a\x0e@'
tRp1356
sg78
g38
(g40
S'\xb0t\x9a5P\xfe\x05@'
tRp1357
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp1358
sg83
g85
sg86
S'Blowtorch'
p1359
sg88
S'../stimuli_figure/Blowtorch.jpeg'
p1360
sg90
g38
(g40
S'\xf3\n\xfe\xcb\x81\xe3\xf9?'
tRp1361
sg92
g93
sg94
g38
(g40
S'\xb2(\x1cL\xbep\xf8?'
tRp1362
sg96
g38
(g40
S'\xe55\x94\xd7P^\x13@'
tRp1363
sg98
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x04@'
tRp1364
sg100
g38
(g40
S'y\xe0\xe0\xf0@R\xed?'
tRp1365
sg102
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x1d@'
tRp1366
sg104
g38
(g40
S'I5W\xb6\x06*\x00@'
tRp1367
stRp1368
ag1
(g65
g66
(dp1369
g68
g69
sg70
g38
(g40
S'\x1f\x85\xebQ\xb8\x1e\r@'
tRp1370
sg72
g38
(g40
S'\xdey\x0e\xa9\xca\x90\xe2?'
tRp1371
sg74
S'Tr\xedpode'
p1372
sg76
g38
(g40
S'\x0c\xe55\x94\xd7P\x12@'
tRp1373
sg78
g38
(g40
S'\xb0\x08\xa3\x03\xc6?\x04@'
tRp1374
sg80
g38
(g81
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp1375
sg83
g85
sg86
S'Tripod'
p1376
sg88
S'../stimuli_figure/Tripod.jpeg'
p1377
sg90
g38
(g40
S'\xef\xb6\xe8\x9d\x95\x96\xf4?'
tRp1378
sg92
g93
sg94
g38
(g40
S'g\x16~x5\xf6\xfd?'
tRp1379
sg96
g38
(g40
S'l(\xaf\xa1\xbc\x86\x0e@'
tRp1380
sg98
g38
(g40
S'\xa4p=\n\xd7\xa3\xfc?'
tRp1381
sg100
g38
(g40
S'\x15\x9a\xcf\xa6\x82\xa1\xe2?'
tRp1382
sg102
g38
(g40
S'=\n\xd7\xa3p=\x1a@'
tRp1383
sg104
g38
(g40
S'PmE\xe0\x02o\x01@'
tRp1384
stRp1385
ag1
(g65
g66
(dp1386
g68
g69
sg70
g38
(g40
S'R\xb8\x1e\x85\xebQ\x10@'
tRp1387
sg72
g38
(g40
S'\xc1S\xd6\x1e\x93J\xd6?'
tRp1388
sg74
S'Tuerca'
p1389
sg76
g38
(g40
S'\xe75\x94\xd7P^\x11@'
tRp1390
sg78
g38
(g40
S'\x90\x83\\\x94N\x1f\x04@'
tRp1391
sg80
g38
(g81
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp1392
sg83
g85
sg86
S'Nut'
p1393
sg88
S'../stimuli_figure/Nut.jpeg'
p1394
sg90
g38
(g40
S'\xfe;\x0c\x07]`\xfa?'
tRp1395
sg92
g93
sg94
g38
(g40
S'\x07\xed\xaff\x0f~\x00@'
tRp1396
sg96
g38
(g40
S'\xa3\xbc\x86\xf2\x1a\xca\x0b@'
tRp1397
sg98
g38
(g40
S'\xb8\x1e\x85\xebQ\xb8\xe6?'
tRp1398
sg100
g38
(g40
S'\xca\xe4\x07y\\\xeb\xd5\xbf'
tRp1399
sg102
g38
(g40
S'\x9a\x99\x99\x99\x99\x99\x19@'
tRp1400
sg104
g38
(g40
S'|\xa9k\xed\xb9\xb2\xfd?'
tRp1401
stRp1402
asS'seed'
p1403
NsS'thisIndex'
p1404
g38
(g154
S'8\x00\x00\x00'
tRp1405
sS'thisN'
p1406
I5
sS'thisTrialN'
p1407
I5
sS'nTotal'
p1408
I74
sS'_warnUseOfNext'
p1409
I01
sbasS'saveWideText'
p1410
I01
sS'thisEntry'
p1411
(dp1412
g17
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x04@'
tRp1413
sg15
g73
sg16
F79.94273599999724
sg14
F78.545160400040913
ssS'version'
p1414
S''
sS'_paramNamesSoFar'
p1415
(lp1416
g68
ag70
ag72
ag74
ag76
ag78
ag80
ag83
ag86
ag88
ag90
ag92
ag94
ag96
ag98
ag100
ag102
ag104
asS'entries'
p1417
(lp1418
(dp1419
g68
g161
sg70
g673
sg45
g46
sg27
I0
sg25
I5
sg37
g41
sg16
F14.240301600017119
sg20
g38
(g39
(S'i4'
I0
I1
tRp1420
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x01\x00\x00\x00'
tRp1421
sg44
V1
sg83
g85
sg88
g680
sg74
g675
sg19
S'V_nV'
p1422
sg24
F17.65870020003058
sg49
g50
sS'main_loop.thisTrialN'
p1423
I0
sg51
g52
sg94
g682
sg54
g55
sg96
g683
sg17
g38
(g40
S'\x00\x00\x00\x00\x00\x00\xf8?'
tRp1424
sg21
I1
sg29
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x18@'
tRp1425
sg100
g685
sg26
S'3'
sg18
F16.156723399995826
sg35
g36
sg92
g171
sg15
g674
sg22
S'1'
sg76
g676
sg42
g43
sg78
g677
sg80
g678
sS'main_loop.thisIndex'
p1426
g38
(g154
S'\x1e\x00\x00\x00'
tRp1427
sg86
g679
sg47
g48
sg28
F0.58324720000382513
sg90
g681
sg56
g11
sg53
V5
sS'main_loop.thisRepN'
p1428
I0
sg14
F13.070317600038834
sg23
F0.47483590000774711
sg104
g687
sg98
g684
sg33
g34
sg102
g686
sS'main_loop.thisN'
p1429
I0
sa(dp1430
g68
g161
sg70
g282
sg45
g46
sg27
I0
sg25
I5
sg37
g41
sg16
F26.309736600029282
sg20
g38
(g1420
S'\x02\x00\x00\x00'
tRp1431
sg44
V1
sg83
g85
sg88
g289
sg74
g284
sg19
S'nV_V'
p1432
sg24
F30.227343900012784
sg49
g50
sS'main_loop.thisTrialN'
p1433
I1
sg51
g52
sg94
g291
sg54
g55
sg96
g292
sg17
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp1434
sg21
I1
sg29
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x18@'
tRp1435
sg100
g294
sg26
S'3'
sg18
F28.726369000039995
sg35
g36
sg92
g171
sg15
g283
sg22
S'2'
sg76
g285
sg42
g43
sg78
g286
sg80
g287
sS'main_loop.thisIndex'
p1436
g38
(g154
S'\x07\x00\x00\x00'
tRp1437
sg86
g288
sg47
g48
sg28
F0.36636620003264397
sg90
g290
sg56
g11
sg53
V5
sS'main_loop.thisRepN'
p1438
I0
sg14
F25.159415800007991
sg23
F0.94870269997045398
sg104
g296
sg98
g293
sg33
g34
sg102
g295
sS'main_loop.thisN'
p1439
I1
sa(dp1440
g68
g69
sg70
g1302
sg45
g46
sg27
I0
sg25
I5
sg37
g41
sg16
F38.980343600036576
sg20
g38
(g1420
S'\x02\x00\x00\x00'
tRp1441
sg44
V1
sg83
g85
sg88
g1309
sg74
g1304
sg19
g1422
sg24
F42.897873900015838
sg49
g50
sS'main_loop.thisTrialN'
p1442
I2
sg51
g52
sg94
g1311
sg54
g55
sg96
g1312
sg17
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp1443
sg21
I0
sg29
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1c@'
tRp1444
sg100
g1314
sg26
S'1'
sg18
F41.397274300048593
sg35
g36
sg92
g93
sg15
g1303
sg22
S'1'
sg76
g1305
sg42
g43
sg78
g1306
sg80
g1307
sS'main_loop.thisIndex'
p1445
g38
(g154
S'D\x00\x00\x00'
tRp1446
sg86
g1308
sg47
g48
sg28
F0.33309309999458492
sg90
g1310
sg56
g11
sg53
V5
sS'main_loop.thisRepN'
p1447
I0
sg14
F37.73137150000548
sg23
F0.32938360003754497
sg104
g1316
sg98
g1313
sg33
g34
sg102
g1315
sS'main_loop.thisN'
p1448
I2
sa(dp1449
g68
g69
sg70
g894
sg45
g46
sg27
I0
sg25
I5
sg37
g41
sg16
F52.718890100019053
sg20
g38
(g1420
S'\x02\x00\x00\x00'
tRp1450
sg44
V1
sg83
g85
sg88
g901
sg74
g896
sg19
g1422
sg24
F56.152789700019639
sg49
g50
sS'main_loop.thisTrialN'
p1451
I3
sg51
g52
sg94
g903
sg54
g55
sg96
g904
sg17
g38
(g40
S'\x00\x00\x00\x00\x00\x00\xf8?'
tRp1452
sg21
I0
sg29
g38
(g40
S'\x00\x00\x00\x00\x00\x00 @'
tRp1453
sg100
g906
sg26
S'2'
sg18
F54.651783600042108
sg35
g36
sg92
g93
sg15
g895
sg22
Nsg76
g897
sg42
g43
sg78
g898
sg80
g899
sS'main_loop.thisIndex'
p1454
g38
(g154
S'+\x00\x00\x00'
tRp1455
sg86
g900
sg47
g48
sg28
F0.68209800001932308
sg90
g902
sg56
g11
sg53
V5
sS'main_loop.thisRepN'
p1456
I0
sg14
F51.400807099998929
sg104
g908
sg98
g905
sg33
g34
sg102
g907
sS'main_loop.thisN'
p1457
I3
sa(dp1458
g68
g69
sg70
g792
sg45
g46
sg27
I0
sg25
I5
sg37
g41
sg16
F67.121903399995063
sg20
g38
(g1420
S'\x02\x00\x00\x00'
tRp1459
sg44
V1
sg83
g85
sg88
g799
sg74
g794
sg19
g1422
sg24
F70.539264700026251
sg49
g50
sS'main_loop.thisTrialN'
p1460
I4
sg51
g52
sg94
g801
sg54
g55
sg96
g802
sg17
g38
(g40
S'\x00\x00\x00\x00\x00\x00\xf8?'
tRp1461
sg21
I1
sg29
g38
(g40
S'\x00\x00\x00\x00\x00\x00\x1a@'
tRp1462
sg100
g804
sg26
S'3'
sg18
F69.03864430001704
sg35
g36
sg92
g93
sg15
g793
sg22
S'2'
sg76
g795
sg42
g43
sg78
g796
sg80
g797
sS'main_loop.thisIndex'
p1463
g38
(g154
S'%\x00\x00\x00'
tRp1464
sg86
g798
sg47
g48
sg28
F0.35125800000969321
sg90
g800
sg56
g11
sg53
V5
sS'main_loop.thisRepN'
p1465
I0
sg14
F65.656225500046276
sg23
F0.4642578000202775
sg104
g806
sg98
g803
sg33
g34
sg102
g805
sS'main_loop.thisN'
p1466
I4
sasS'loops'
p1467
(lp1468
g60
asS'savePickle'
p1469
I00
sb.